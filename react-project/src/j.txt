tamar
D:\הנדסאים\react\react-project\src
App.css.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
D:\הנדסאים\react\react-project\src
index.cssbody {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, constolas, 'Courier New',
    monospace;
}
D:\הנדסאים\react\react-project\src
style.css.nav {
    text-align: center;
    background-color: black;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link {
    text-align: center;
    justify-content: center;
    color: white;
    margin: 2rem;
    text-decoration: none;
}
.link:hover {
    color: chartreuse;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active {
    color: purple;
}D:\הנדסאים\react\react-project\src
style.css.nav{
    text-align: center;
    background-color: black;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link{
    color: white;
    margin: 2rem;
}
.link:hover{
    color: chartreuse;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active{
    color: crimson;
}D:\הנדסאים\react\react-project\src
StyleDetailes.css#detiles{
    text-align: center;
}D:\הנדסאים\react\react-project\src
StyleNav.css.nav {
    text-align: center;
    background-color:#EDE2D7;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link {
    color: white;
    margin: 2rem;
    text-decoration: none;
}
.link:hover {
    color:black;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active {
    color:black;
    font-size: larger;
}D:\הנדסאים\react\react-project\src
StyleRecipe.css.recipe{
     text-align: center;
     border: 1px solid black; 
      background-color: #EDE2D7; 
      padding: 40px; 
      margin: 7px;
     flex-basis:auto;
}
.all{
    width:100%;
    display: flex;
    flex:none;
    flex:wrap;
    flex-wrap: nowrap;
    flex-wrap: wrap-reverse;
    justify-content: space-between
}
#milky{
    border: 2px solid rgb(95, 121, 237);
    text-align: center;
}
#meats{
    border: 2px solid rgb(240, 130, 130);
    text-align: center;
}
#parwe{
    border: 2px solid rgb(120, 248, 120);
    text-align: center;
}
D:\הנדסאים\react\react-project\src
style.css.err {
    color: red;
    background-color: rgb(241, 157, 157);
}
.warn {
    color: rgb(12, 12, 12);
    background-color: yellow;
}
.info {
    color: blue;
    background-color: lightblue;
}
.msg {
    width: 100vw;
    height: 30px;
    font-size: 1.2rem;
}
.big {
    font-size: 5rem;
    color: hotpink;
}
.small {
    font-size: 1rem;
    color: orange;
}
img {
    width: 20rem;
    height: auto;
}
.bless {
    width: 30rem;
    height: auto;
    border: double black 0.2rem;
    margin: 2rem;
}
.male {
    background-color: lightblue;
    color: darkblue;
}
.female {
    background-color: pink;
    color: hotpink;
}D:\הנדסאים\react\react-project\src
style.css.nav{
    text-align: center;
    background-color: black;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link{
    color: blueviolet;
    margin: 2rem;
}
.link:hover{
    color: chartreuse;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active{
    color: crimson;
}D:\הנדסאים\react\react-project\src
App.jsimport logo from './logo.svg';
import './App.css';
import { Main } from '../src/ReactProject/jsx.jsx/Main';
function App() {
  return (
    <div className="App">
      <Main></Main>
    </div>
  );
}

export default App;
D:\הנדסאים\react\react-project\src
App.test.jsimport { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});
D:\הנדסאים\react\react-project\src
index.jsimport React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(constole.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
D:\הנדסאים\react\react-project\src
reportWebVitals.jsconst reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;
D:\הנדסאים\react\react-project\src
setupTests.js// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';
D:\הנדסאים\react\react-project\src
api.jsimport axios from "axios"
const getTodoList = async () => {
    try {
        return await axios.get('https://jsonplaceholder.typicode.com/todos')
    }
    catch {
        throw Error('could not get the data from the resource')
    }
}
const getTodoList1 = async () => {
    fetch('https://jsonplaceholder.typicode.com/todos')
        .then(res => {
            if (!res.ok) {
                throw Error('could not fetch the data from the resource')
            }
            return res.json()
        })
        .then(data => {
            setList(data)
            setError(null)
        })
        .catch(err => {
            setList(null)
            setError(err.message)
        })
}
fetch('URL_GOES_HERE', { 
    method: 'post', 
    headers: new Headers({
        'Authorization': 'Bearer '+ ,
        'Content-Type': 'application/x-www-form-urlencoded'
    }), 
    body: 'A=1&B=2'
});D:\הנדסאים\react\react-project\src
useFetch.jsimport { useEffect, useState } from "react"
export const useFetch = (url) => {
    const [data, setData] = useState()
    const [error, setError] = useState()
    useEffect(() => {
        fetch(url)
            .then(res => {
                if (!res.ok) {
                    throw Error('could not fetch the data from the resource')
                }
                return res.json()
            })
            .then(data => {
                setData(data)
                setError(null)
            })
            .catch(err => {
                setData(null)
                setError(err.message)
            })
    }, [url])
    return { data, error }
}D:\הנדסאים\react\react-project\src
useSizeScreen.jsimport { useEffect, useState } from "react";
export const useSizeScreen = () => {
    const [isSmall, setIsSmall] = useState(window.innerWidth < 600)
    useEffect(() => {
        window.addEventListener('resize', setIsSmall(window.innerWidth < 600))
    })
    return isSmall;
}D:\הנדסאים\react\react-project\src
Action.js//פונקציות עריכה
export const setProduct = (newProduct) => {
    return { type: 'SET_PRODUCT', payload: newProduct }
}
export const addProduct = (product) => {
    return { type: 'ADD_PRODUCT', payload: product }
}D:\הנדסאים\react\react-project\src
Action.jsexport const addUser = (user) => {
    return { type: 'ADD_USER', payload: user }
}
export const updateUser = ({ id, user }) => {
    return { type: 'UPDATE_USER', payload: { id, user } }
}
export const setCurrentUser = (user) => {
    return { type: 'SET_CURRENT', payload: user }
}D:\הנדסאים\react\react-project\src
Store.jsimport { createStore } from "redux";
//immer - ספריה הממירה אובייקטים מסוג שלא ניתן לשינוי לסוג שניתן לשינוי
//immutable - לא ניתן לשינוי
//mutable - ניתן לשינוי
import { produce } from "immer";
//שם מקובל לאובייקט שיכיל את כל הנתונים
//בגישה לשרת נכתוב בסטייט רק את האובייקטים שיכילו את הנתנים
const initialState = {
    currentUser: {},
    users: [
        { id: 1, firstName: "ester", lastName: "pilot", eMail: "est13@gmail.com", cell: "0527678899", password: "e1112333" },
        { id: 2, firstName: "tova", lastName: "bienstock", eMail: "tova@gmail.com", cell: "0556775522", password: "t09877899" },
        { id: 3, firstName: "chavi", lastName: "konak", eMail: "ck@gmail.com", cell: "0533145655", password: "c44556677" },
        { id: 4, firstName: "yehudis", lastName: "walitsky", eMail: "yw@gmail.com", cell: "0548426632", password: "y67859403" },
        { id: 5, firstName: "blimi", lastName: "yusba", eMail: "blimi2@gmail.com", cell: "0523147896", password: "b77788889" },
        { id: 6, firstName: "rivky", lastName: "grossman", eMail: "randd@gmail.com", cell: "0551236987", password: "r46557786" },
        { id: 7, firstName: "dini", lastName: "sternberg", eMail: "8844@gmail.com", cell: "0542483663", password: "d13675467" }
    ],
    // maxId: users[users.length - 1].id
    maxId: 7
}
//שם מקובל לאובייקט
//מתאם בין הסטייט לפעולות
//אחראי לבצע עדכונים על הסטייט
//מקבל שני ארגומנטים
//1. פונקציה שמקבלת סטייט ואקשן ואחראית על התאום
//2. הסטייט שלי שיכנס לפונקציה האנונימית כסטייט
const reducer = produce((state, action) => {
    switch (action.type) {
        case 'ADD_USER': {
            return { ...state, maxId: state.maxId + 1, users: [...state.users, action.payload] }
        }
            break;
        case 'UPDATE_USER': {
            let i = state.users.findIndex(u => u.id === action.payload.id)
            state.users[i] = action.payload.user
            // state.users[action.payload.id - 1] = action.payload.user
        }
            break;
        case 'SET_CURRENT': {
            state.currentUser = action.payload
        }
            break;
        default:
            break;
    }
}, initialState)
//יצירה של הסטייט הסופי כמחסן
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
ProductAction.jsexport const addProduct = (product) => {
    return { type: 'ADD_PRODUCT', payload: product }
}
export const updateProduct = ({ id, product }) => {
    return { type: 'UPDATE_PRODUCT', payload: { id, product } }
}
export const setCurrentProduct = (product) => {
    return { type: 'SET_CURRENT', payload: product }
}
export const removeProduct = index => {
    return { type: 'DELETE_PRODUCT', payload: index }
}D:\הנדסאים\react\react-project\src
ProductReducer.js//immer - ספריה הממירה אובייקטים מסוג שלא ניתן לשינוי לסוג שניתן לשינוי
//immutable - לא ניתן לשינוי
//mutable - ניתן לשינוי
import { produce } from "immer";
//שם מקובל לאובייקט שיכיל את כל הנתונים
//בגישה לשרת נכתוב בסטייט רק את האובייקטים שיכילו את הנתנים
const productState = {
    currentProduct: {},
    products: [],
    // maxId: users[users.length - 1].id
    maxId: 7
}
//שם מקובל לאובייקט
//מתאם בין הסטייט לפעולות
//אחראי לבצע עדכונים על הסטייט
//מקבל שני ארגומנטים
//1. פונקציה שמקבלת סטייט ואקשן ואחראית על התאום
//2. הסטייט שלי שיכנס לפונקציה האנונימית כסטייט
const productReducer = produce((state, action) => {
    switch (action.type) {
        // case 'ADD_USER': {
        //     // state.maxId = state.maxId + 1
        //     return { ...state, users: [...state.users, action.payload], maxId: state.maxId + 1 }
        // }
        //     break;
        // case 'UPDATE_USER': {
        //     let i = state.users.findIndex(u => u.id === action.payload.id)
        //     state.users[i] = action.payload.user
        //     // state.users[action.payload.id - 1] = action.payload.user
        // }
        //     break;
        // case 'SET_CURRENT': {
        //     state.currentUser = action.payload
        // }
        //     break;
        // case 'DELETE_USER': {
        //     return { ...state, users: [state.users.splice(action.payload, 1)] }
        // }
        //     break;
        default:
            break;
    }
}, productState)
export default productReducer;D:\הנדסאים\react\react-project\src
Store.jsimport { combineReducers, createStore } from "redux";
import userReducer from './UserReducer';
import productReducer from './ProductReducer';
//איחוד reducers
const reducer = combineReducers({
    userReducer,
    productReducer
})
//יצירה של הסטייט הסופי כמחסן
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
UserAction.jsexport const addUser = (user) => {
    return { type: 'ADD_USER', payload: user }
}
export const updateUser = ({ id, user }) => {
    return { type: 'UPDATE_USER', payload: { id, user } }
}
export const setCurrentUser = (user) => {
    return { type: 'SET_CURRENT', payload: user }
}
export const removeUser = index => {
    return { type: 'DELETE_USER', payload: index }
}D:\הנדסאים\react\react-project\src
UserReducer.js//immer - ספריה הממירה אובייקטים מסוג שלא ניתן לשינוי לסוג שניתן לשינוי
//immutable - לא ניתן לשינוי
//mutable - ניתן לשינוי
import { produce } from "immer";
//שם מקובל לאובייקט שיכיל את כל הנתונים
//בגישה לשרת נכתוב בסטייט רק את האובייקטים שיכילו את הנתנים
const userState = {
    currentUser: {},
    users: [
        { id: 1, firstName: "ester", lastName: "pilot", eMail: "est13@gmail.com", cell: "0527678899", password: "e1112333" },
        { id: 2, firstName: "tova", lastName: "bienstock", eMail: "tova@gmail.com", cell: "0556775522", password: "t09877899" },
        { id: 3, firstName: "chavi", lastName: "konak", eMail: "ck@gmail.com", cell: "0533145655", password: "c44556677" },
        { id: 4, firstName: "yehudis", lastName: "walitsky", eMail: "yw@gmail.com", cell: "0548426632", password: "y67859403" },
        { id: 5, firstName: "blimi", lastName: "yusba", eMail: "blimi2@gmail.com", cell: "0523147896", password: "b77788889" },
        { id: 6, firstName: "rivky", lastName: "grossman", eMail: "randd@gmail.com", cell: "0551236987", password: "r46557786" },
        { id: 7, firstName: "dini", lastName: "sternberg", eMail: "8844@gmail.com", cell: "0542483663", password: "d13675467" }
    ],
    // maxId: users[users.length - 1].id
    maxId: 7
}
//שם מקובל לאובייקט
//מתאם בין הסטייט לפעולות
//אחראי לבצע עדכונים על הסטייט
//מקבל שני ארגומנטים
//1. פונקציה שמקבלת סטייט ואקשן ואחראית על התאום
//2. הסטייט שלי שיכנס לפונקציה האנונימית כסטייט
const userReducer = produce((state, action) => {
    switch (action.type) {
        case 'ADD_USER': {
            // state.maxId = state.maxId + 1
            return { ...state, users: [...state.users, action.payload], maxId: state.maxId + 1 }
        }
        case 'UPDATE_USER': {
            let i = state.users.findIndex(u => u.id === action.payload.id)
            state.users[i] = action.payload.user
            // state.users[action.payload.id - 1] = action.payload.user
        }
            break;
        case 'SET_CURRENT': {
            state.currentUser = action.payload
        }
            break;
        case 'DELETE_USER': {
            return { ...state, users: [state.users.splice(action.payload, 1)] }
        }
        default:
            break;
    }
}, userState)
export default userReducer;D:\הנדסאים\react\react-project\src
list.jsximport { Student } from "./Student"
export const List = props => {
    const { list } = props
    return <>
        {list.map((item, index) => <Student name={item.name} age={item.age} grade={item.grade}></Student>)}
    </>
}D:\הנדסאים\react\react-project\src
main.jsximport { List } from "./list"
export const Main = () => {
    const student = [{ name: 'sara', age: 12, grade: 87 }, { name: 'dina', age: 15, grade: 84 }]
    return <>
        <List list={student}></List>
    </>
}D:\הנדסאים\react\react-project\src
Student.jsxexport const Student = (props) => {
    const { name, age, grade } = props
    function Age_Grade() {
        if (age >= 12 && grade >= 85)
            return true
        return false
    }
    return <>
        <p>{name}</p>
        {Age_Grade() ?
            <h1>you can go to trip</h1>
            :
            <h1>you cant go to trip</h1>
        }
    </>
}
D:\הנדסאים\react\react-project\src
Details.jsximport { useDispatch } from 'react-redux'
import { addProduct } from '../lesson6/redux/Action'
import {useNavigate, useParams} from 'react-router-dom'
import { useRef, useState } from "react"
import swal from 'sweetalert'
export const Details = () => {
//    let p = useParams()
debugger
   const dispatch=useDispatch()
   const nameRef = useRef()
   const costRef = useRef()
   let nav=useNavigate()
   const send = (event)=>{
    event.preventDefault()
    const user={
        name: nameRef.current.value,
        price: costRef.current.value,
    }
    swal(`change successfully ${user.name}!`);
    //  ניתוב מתוך קומפוננטה לניתוב כלךשהו שהוגדר בדף הראוטינג
     nav(`/Wellcome/${user.name}/${user.price}`)
     dispatch(addProduct(user))
    }
    return <>
        {/* <div>
              <p>name: {p.name}<input  placeholder='to change'className='k' type="text" style={{width:65}}></input></p> 
            <p>price: {p.price}<input  placeholder='to change'className='k' type="text" style={{width:65}}></input></p> 
        </div>
        <button onClick={(e) => send(e)}>send</button>
        <br></br> */}
        <h3>produce:</h3>
        <label htmlFor={'name'}>name:</label><br></br>
        <input id={'name'} placeholder={"kk"} ref={nameRef}></input>
        <br></br>
        <label htmlFor={'cost'}>price:</label><br></br>
        <input id={'cost'} placeholder={"kk"} ref={costRef}></input>
        <br></br>
        {/* <label htmlFor={'kod'}>kod: ref={kodRef}</label><br></br>
        <input id={'kod'} placeholder={p.kod} ref={kodRef}></input> */}
    <button onClick={(e) => send(e)}>send</button>
        <br></br>
    </>
}
export default Details;
D:\הנדסאים\react\react-project\src
Home.jsxexport const Home = () => {
    return <>
        <h1>Home</h1>
    </>
}D:\הנדסאים\react\react-project\src
main.jsximport { Nav } from "./Nav"
import { Routing } from "./Routing"
import { BrowserRouter} from "react-router-dom"
import { Provider, useSelector } from 'react-redux'
import store from "./redux/stor"
export const Main = () => {
    return <>
     <Provider store={store}>
        <BrowserRouter>
            <Nav></Nav>
            <Routing></Routing>
        </BrowserRouter>
    </Provider>
    </>
}
D:\הנדסאים\react\react-project\src
Nav.jsximport './style.css'
import { Link, NavLink } from 'react-router-dom'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            <NavLink to='Home' className={'link'}>Home</NavLink>
            {/* <NavLink to='DitailsIn' className={'link'}>DitailsIn</NavLink> */}
            <NavLink to='proudect' className={'link'}>proudect</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
proudect.jsximport { useRef, useState } from 'react'
import { useNavigate, Outlet } from 'react-router-dom'
import{Details } from './Details'
import swal from 'sweetalert'
import { useSelector } from 'react-redux'
export const Proudect = () => {
    const list = useSelector(x=> x.products)
    // יצירת משתנה שאחראי על ניתוב מתוך קומפוננטה
    let nav = useNavigate()
// const [newProudect, setNewProudect] = useState({})
    // const navigate = useNavigate()
    const show = (item,c) => {
        // ניתוב מתוך קומפוננטה לניתוב כלךשהו שהוגדר בדף הראוטינג
    nav(`/update/${item.name}/${item.price}/${c}`)
    }
    const show1 = () => {
        debugger
        nav(`/Details`)
    }
    return <>
         <h1>Products:</h1><br></br>
        <table border={6} className={'table'}>
            <tr>
                <th className="colorY">Name:</th>
                <th>Price:</th>
            </tr>
            { list && list.map((item,index) => 
            <tr key={index}>
                 <td ><button onClick={() => show(item,index)}>{item.name}</button> </td>
                 <td key={index}>{item.price}</td>
            </tr>)}
        </table>
        <button onClick={()=> show1()}>הוספה</button> 
         <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
Routing.jsximport { Route, Routes } from 'react-router-dom'
import { Home } from './Home'
import { Proudect } from './proudect'
import { Details } from './Details'
import { Update } from './update'
import { Wellcome } from './Wellcome'
export const Routing = () => {
    return <>
        <Routes>
            <Route path={'/'} element={<Home></Home>}></Route>
            <Route path={'Home'} element={<Home></Home>}></Route>
            <Route path={'Proudect'} element={<Proudect></Proudect>}></Route>
            <Route path={'Wellcome/:name/:price'} element={<Wellcome></Wellcome>}></Route>
            <Route path={'Details'} element={<Details></Details>}></Route>
            <Route path={'update/:name/:price/:c'} element={<Update></Update>}></Route>
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
update.jsximport { useNavigate, useParams } from "react-router-dom"
import { setProduct } from "./redux/Action"
import swal from 'sweetalert'
import { useRef } from "react"
import { useDispatch } from 'react-redux'
export const Update =() => {
     let params = useParams()
    const dispatch=useDispatch()
 let i=params.c
    const nameRef = useRef()
    const costRef = useRef()
    let nav=useNavigate()
    const send = ()=>{
     const pp={user:{
         name: nameRef.current.value,
         price: costRef.current.value,
         kod: params.kod},
         index:i
     }
     // ניתוב מתוך קומפוננטה לניתוב כלךשהו שהוגדר בדף הראוטינג
      nav(`/Wellcome/${pp.user.name}/${pp.user.price}`)
     dispatch(setProduct(pp))
     swal(`change successfully ${pp.user.name}!`);
    }
    return<>
 <h3>produce:</h3>
        <label  htmlFor={'name'} >name:</label><br></br>
        <input id={'name'} ></br>
        <label  htmlFor={'cost'}>price:</label><br></br>
        <inpuref={nameRef} placeholder={params.name} ></input>
        <brt id={'cost'} ref={costRef} placeholder={params.price}></input>
        <br></br>
        <button onClick={() => send()}>send</button>
        <br></br>
    </>
}
export default Update;D:\הנדסאים\react\react-project\src
Wellcome.jsximport { useParams } from "react-router-dom"
export const Wellcome = () => {
    let p=useParams()
    return <>
    <h1>jh</h1>
        <h1>name: {p.name} price: {p.price}</h1>
    </>
}D:\הנדסאים\react\react-project\src
blesCard.jsxexport const Blessing = (props) => {
    const { sender:name1, addressee:name2, kind:sex, whish:w, text:t, typeCard } = props
    function head() {
        if(sex == 'n')
        return 'היקרה'   
        return 'היקר'
    }
return <>
        <div className="card">
            { 
                (typeCard== 'have a good year') ?
                    <div style={{ backgroundColor: 'red', fontSize: '3rem', margin: '5rem'  }}>
                        <p>{head()} {name2}<br></br> {w}<br></br>{t}<br></br>{name1}</p>
                    </div>
                    :
                    (w == 'mazal tov') ?
                    <div style={{ backgroundColor: '#64dafb', fontSize: '3rem', margin: '5rem' }}>
                        <p>{head()} {name2}<br></br>{w}<br></br>{t}<br></br>{name1}</p>
                    </div>
                    :
                    (w =='happey birthday to you') ?
                    <div style={{backgroundColor:'pink',fontSize:'3rem',margin:'5rem'}}>
                        <p>{head()} {name2}<br></br>{w}<br></br>{t}<br></br>{name1}</p>
                        </div>
                   :    
                    (w=='moadim lsimcha')?
                        <div style={{backgroundColor:'blue',fontSize:'3rem',margin:'5rem'}}>
                            <p>{head()} {name2}<br></br>{w}<br></br>{t}<br></br>{name1}</p>
                            </div>
                   :
                   ""
            }
        </div>
    </>
}
D:\הנדסאים\react\react-project\src
List.jsximport { Blessing } from "./blesCard"
import { SelectApp } from "./SelectApp"
export const List = props=>{
    const {list} = props
    return<>
    {list.map((item,index)=><Blessing sender={item.sender} addressee={item.addressee} kind={item.kind} whish={item.whish} text={item.text} typeCard={item.typeCard}></Blessing>)}
    </>
}D:\הנדסאים\react\react-project\src
main.jsximport { Blessing } from "./blesCard"
import { List } from "./List"
import { SelectApp } from "./SelectApp"
export const Main = () => {
    const blesCard = [{ sender: "dina", addressee: "sara", kind: "n", whish: "have a good year", text: "", typeCard: "goodYear" },
                      { sender: "sara", addressee: "riki", kind: "n", whish: "mazal tov", text: "", typeCard: "newBorn" },
                      { sender: "tzvi", addressee: "dani", kind: "z", whish: "happey birthday to you", text: "", typeCard: "birthday" },
                      { sender: "chaim", addressee: "dani", kind: "z", whish: "moadim lsimcha", text: "", typeCard: "cagim" }]
    return <>
<Blessing></Blessing> 
         {<List list={blesCard}> </List>  }
        <SelectApp></SelectApp>
    </>
}D:\הנדסאים\react\react-project\src
SelectApp.jsximport { useState } from "react";
import { Blessing } from "./blesCard";
export const SelectApp = props => {
    const{SelectApp}=props
    const type = ["have a good year", "mazal tov", "happey birthday to you", "moadim lsimcha"];
    const min = ['n', 'z'];
    const [name1, setSender] = useState('')
    const [name2, setAdressee] = useState('')
    const [t, setText1] = useState('')
    const [w, setWish] = useState()
    const [typeCard, setText2] = useState('')
    const [sex, setSex] = useState('')
    return <>
    <h1>greeting Card - fill the details: </h1><br></br>
    <label>Input who well get your latter:</label>
        <input onBlur={(e) => { setSender(e.target.value) }}></input><br></br>
        {constole.log(name2)}
        <label>Input the name of the sender: </label>
        <input onBlur={(e) => { setAdressee(e.target.value) }}></input><br></br>
        { constole.log(name1)}
        <label>Choose the sex of the getter: </label>
        <select id="selcetSex" onChange={(e) => setSex(e.target.value)}>
            {min.map((c, index) => <option key={index} value={c}>{c}</option>)}
        </select><br></br>
        <label>Choose the goal of the holyday: </label>
        <select  id="selcetGoal" onChange={(e) => setWish(e.target.value)}>
            {type.map((c, index) => <option key={index} value={c}>{c}</option>)}
        </select><br></br>
         <label>What do you want to wish for her?</label><br></br>
        <textarea className="txt" onBlur={(e) => { setText1(e.target.value) }}></textarea><br></br>
        <label>If you want to say more thing:</label><br></br>
        <textarea className="txt" onBlur={(e) => { setText2(e.target.value) }}></textarea><br></br> 
           {name1 != '' && name2 != '' && w != '' &&  <Blessing  type={typeCard}  sender={name1} addressee={name2} kind= {sex} whish={w} text={t}></Blessing>} 
    </>
}D:\הנדסאים\react\react-project\src
connect.jsximport React from "react";
export const Connect = () => {
    return <>
    <h1>sdftghjjkl</h1>
    </>
}D:\הנדסאים\react\react-project\src
img.jsximport React from "react";
import img1 from "../hw6/imgs/B_Afghanistan"
export const Img = () => {
    return <>
    <div img={img1}></div>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import React from "react";
import { BrowserRouter } from "react-router-dom";
import { Nav } from "./Nav";
import { Routing } from "./routing";
import { Img } from "./img";
import { Connect } from "./connect";
import { Product } from "./product";
export const Main = () => {
    return <>
        {/* קומפוננטה שמנהלת את כל הניתובים */}
        <BrowserRouter>
            {/* nav טוענת את ה */}
            <Nav></Nav>
            {/* טוענת את כל הצהרות הניתובים */}
            <Routing></Routing>
        </BrowserRouter>
        {/* <BrowserRouter>
            <Nav></Nav>
            <Routes>
                <Route path='login' element={<Login />}></Route>
                <Route path='tick' element={<Tick />}></Route>
            </Routes>
        </BrowserRouter> */}
    </>
}D:\הנדסאים\react\react-project\src
Nav.jsximport React from "react";
import { Link, NavLink } from "react-router-dom";
import './style.css'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            <NavLink to='product' className={'link'}>product</NavLink>
            <NavLink to='img' className={'link'}>img</NavLink>
            <NavLink to='connect' className={'link'}>connect</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
product.jsximport React from "react";
export const Product = () => {
    return <>
    <h1>sdklgvjhfd</h1>
    </>
}D:\הנדסאים\react\react-project\src
routing.jsximport React from "react";
import { Route, Routes } from "react-router";
import { PageNotFound } from "./PageNotFound";
import { Img } from "./img";
import { Connect } from "./connect";
import { Product } from "./product";
export const Routing = () => {
    return <>
        <Routes>
            <Route path='/' element={<Product />}></Route>
            <Route path='product' element={<productA />}></Route>
            <Route path='img' element={<Img />}></Route>
            <Route path='connect' element={<Connect />}></Route>
            {/* <Route element={<PageNotFound />}></Route> */}
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
Fruit.jsximport React from "react";
const Fruit = () => {
    const fruit = ["Apple", "Peach", "Orange", "Banana", "Pear"]
    return (
        <>
            <ul>
                {fruit.map(item =>
                    <li>{item}</li>
                )}
            </ul>
        </>
    )
}
export default Fruit;D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import Fruit from "./Fruit";
import { Person } from "./Person";
export const Main = () => {
    return <>
        <Person name={"Avital"} age={12}></Person>
        <Person name={"Efrat"} age={25}></Person>
        <Person name={"Leah"} age={3}></Person>
        <Person></Person>
        <Person age={45}></Person>
        <Fruit></Fruit>
    </>
}D:\הנדסאים\react\react-project\src
Person.jsximport React from "react";
export const Person = (props) => {
    // props={name:"Avital", age:12}
    //שליפת המאפיינים מתוך הפרופס לתוך משתנים שנקראים באותם שמות
    const { name, age } = props;
    //קומפוננטה מחזירה אובייקא אקסמלי
    return <>
        <h3>name: {name}</h3>
        <h3>age: {age}</h3>
        {age >= 9 && <h1>יכול לחצות את הכביש לבד 👍👍👍👍</h1>}
        {/* //1 תגית מתחילות באותיות קטנות */}
        {/* <h1>hello</h1> */}
        {/* //2 תגיות באותיות גדולות הן קומפוממטה */}
        {/* <Person></Person> */}
        {/* //3 react ל import חובה להוסיף    */}
        {/* //4  חייב להיות עטוף באלמנט אחד  jsx קוד*/}
        {/* <> */}
        {/* <h1>atra</h1>
            <h2>react</h2> */}
        {/* </> */}
        {/* {
            <div>
                <h1>atra</h1>
                <h2>react</h2>
                </div>
        } */}
        {/* //5 JS אין שימוש במילים שמורות של  */}
        {/* camelCase הופכים להיות attributes  */}
        {/* <p class="p"></p >=>
            <p className="p"></p> */}
        {/* //camelCase הופכים ל style */}
        {/* <p style={{ font-size: "11px" }}>hello</p> */}
        {/* <p style={{ fontSize: "11px" }}>hello</p> */}
        {/* background-color => backgroundColor */}
        {/* //camelCase  הופכים ל event */}
        {/* <button onclick={doSomething}></button> */}
        {/* <button onClick={doSomething}></button> */}
        {/* //6חייב להיות בתוך js קוד  {} */}
        {/* <p> x+y={x + y}</p>
        <p>x+y={addNumbers()}</p>
        {/* אפשר לשתול אלמנטים בתוך הקוד וקוד בתוך אלמטים */}
        {/* {x > 3 ? <p>yes</p> : <p>no</p>}
        <div className={name}>className={name}</div>
        <ul>
            {
                arry.map(item => <li key={item}>{item}</li>)
            }
        </ul> */}
    </>
}
//ערכי ברירת מחדל למאפיינים של הקומפוננטה
//במקרה ולא ישלחו לי את אחד / כל המאפיינים ריאקט תקח את המאפיינים הדיפולטיביים
Person.defaultProps = {
    name: "Unknown",
    age: 0
}
// export const Div = () => {
//     return <>
//         <p>p1</p>
//         <p>p2</p>
//         <div>Hello EveryBody!</div>
//     </>
// }
D:\הנדסאים\react\react-project\src
Home.jsximport { useFetch } from "./useFetch"
export const Home = () => {
    const { data: list, error } = useFetch('https://jsonplaceholder.typicode.com/todos')
    return <>
        {error && <p>{error}</p>}
        {list && list.map((item, index) => <p key={index}>{item.title}</p>)}
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport { Home } from "./Home"
import { ArrBySizeScreen, ShowSizeScreen } from "./SizeScreen"
export const Main = () => {
    return <>
        {/* <ShowSizeScreen></ShowSizeScreen>
        <ArrBySizeScreen></ArrBySizeScreen> */}
        <Home></Home>
    </>
}D:\הנדסאים\react\react-project\src
SizeScreen.jsximport { useEffect, useState } from "react"
import { useSizeScreen } from "./useSizeScreen"
export const ShowSizeScreen = () => {
    const isSmall = useSizeScreen()
    return <>
        {isSmall && <p>Small Screen</p>}
        {!isSmall && <p>Big Screen</p>}
    </>
}
export const ArrBySizeScreen = () => {
    const isSmall = useSizeScreen()
    const arr = ['aaa', 'bbb', 'ccc', 'ddd', 'eee', 'fff', 'ggg']
    return <>
        {isSmall &&
            <div>
                <p>{arr[0]}</p>
                <p>{arr[1]}</p>
            </div>
        }
        {!isSmall &&
            arr.map((item, index) => <p key={index}>{item}</p>)
        }
    </>
}D:\הנדסאים\react\react-project\src
Counter.jsximport React from "react";
import { useState } from "react";
export const Counter = () => {
    // let counter = 0;
    // let plus = 1;
    //הגדרת משנה בסטייט של ריאקט
    //שם המשתנה, שם הפונקציה שתטפל בעדכון ערך המשתנה
    //בסוגריים העגולות נציב ערך התחלתי
    const [counter, setCounter] = useState(0)
    const [plus, setPlus] = useState(1)
    const changePlus = (e) => {
        setPlus(plus => Number(e.target.value))
        // plus = Number(e.target.value);
    }
    const addToCounter = () => {
        setCounter(counter => counter + plus)
        // counter += plus;
    }
    return <>
        <h1>{counter}</h1>
        <button onClick={addToCounter}>add</button>
        <p>jump in {plus}</p>
        <input placeholder="set plus" onChange={changePlus}></input>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Counter } from "./Counter";
import { SelectMain } from "./CountryCity/SelectMain";
export const Main = () => {
    return <>
        {/* <Counter></Counter> */}
        <SelectMain></SelectMain>
    </>
}D:\הנדסאים\react\react-project\src
List.jsximport React, { useEffect, useRef, useState } from "react";
const list = [
    { username: 'Avigail', password: 111 },
    { username: 'Yael', password: 222 },
    { username: 'Efrat', password: 333 },
    { username: 'Miriam', password: 444 },
    { username: 'Yehudit', password: 555 },
    { username: 'Chagit', password: 666 }
]
export const Login = () => {
    const [pw, setPw] = useState()
    const login = () => {
        const user = list.filter(user => user.password == pw)[0]
        if (user)
            document.title = user.username
        else
            document.title = 'unknown'
    }
    //מקבלת שני ארגומנטים
    //פונקציה להפעלה
    //ומערך
    //מופעלת בעת טעינה
    //ו/או בעת שינוי של משתנה/י סטייט
    //אם המערך ריק - רק בעת טעינה
    //אם המערך מלא - גם בעת שינוי של כל אחד מהמשתנים שכתובים בו
    //הפונקציה הפנימית יכולה להחזיר פונקציה
    //שתקרה בעת סגירת הקומפוננטה
    // useEffect(function () {
    //     alert('Im here')
    //     return () => {
    //         alert('Im finished')
    //     }
    // }, [])
    useEffect(() => {
        login()
        return () => { document.title = 'React App' }
    }, [pw])
    // login()
    return <>
        <input type={'password'} onBlur={(e) => setPw(e.target.value)}></input>
        {/* <button onClick={login}>login</button> */}
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React, { useState } from "react";
import { Login } from "./List";
import { Tick } from "./Tick";
export const Main = () => {
    const [show, setShow] = useState(true)
    return <>
        <button onClick={() => setShow(show => !show)}>show/hide</button>
        {/* <Tick></Tick> */}
        {show && <Login></Login>}
    </>
}D:\הנדסאים\react\react-project\src
Tick.jsximport React, { useEffect, useState } from "react";
export const Tick = () => {
    const [tick, setTick] = useState(0)
    //פונקציה בעת טעינת קומפוננטה
    useEffect(() => {
        //פונקציה שקורית כל פרק זמן קבוע
        //הפונקציה מקבלת שני ארגומנטים
        //1. פונקציית callback - מה יקרה
        //2. פרק זמן 1000- שניה, 5000 - 5 שניות וכן הלאה
        const timer = setInterval(() => {
            setTick(v => v + 1)
        }, 5000)
        return () => {
            clearInterval(timer)
        }
    }, [])
    return <>
        <h1>{tick}</h1>
    </>
}D:\הנדסאים\react\react-project\src
details.jsximport React from "react";
import { useParams } from "react-router";
export const Details = () => {
    //שליפת המשתנים שקבלנו כפרמטר
    const name = useParams().name
    return <>
        {/* הצגת שם המשתמש */}
        <h1>Hello {name}!</h1>
    </>
}D:\הנדסאים\react\react-project\src
login.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Login = () => {
    const nameRef = useRef()
    const pwRef = useRef()
    const navigate = useNavigate()
    const login = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        //הפונקציה שולפת את פרטי המשתמש מה loocalstorage
        //ובודקת האם הנתונים שהוכנסו זהים
        const user = localStorage.getItem('username')
        const pw = localStorage.getItem('password')
        if (nameRef.current.value === user && pwRef.current.value === pw) {
            //אם כן נבצע ניתוב ונשלח את השם כפרמטר
            navigate(`/details/${nameRef.current.value}`)
        }
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={login}>login</button>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { BrowserRouter } from "react-router-dom";
import { Nav } from "./Nav";
import { Routing } from "./Routing";
export const Main = () => {
    return <>
        {/* קומפוננטה שמנהלת את כל הניתובים */}
        <BrowserRouter>
            {/* nav טוענת את ה */}
            <Nav></Nav>
            {/* טוענת את כל הצהרות הניתובים */}
            <Routing></Routing>
        </BrowserRouter>
        {/* <BrowserRouter>
            <Nav></Nav>
            <Routes>
                <Route path='login' element={<Login />}></Route>
                <Route path='tick' element={<Tick />}></Route>
            </Routes>
        </BrowserRouter> */}
    </>
}D:\הנדסאים\react\react-project\src
Nav.jsximport React from "react";
import { Link, NavLink } from "react-router-dom";
import './style.css'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            {/* a- נגשת לשרת עבור שליפה של כל מחדש */}
            {/* <a></a> */}
            {/* קומפוננטה של ריאקט - link */}
            {/* link - טוען את היישום מקומית וניגש לשם לשלוף את הקומפוננטה הרצויה */}
            {/* <Link to='login' className={'link'}>Login</Link>
            <Link to='tick' className={'link'}>Tick</Link> */}
            {/* NavLink - active מזהה את הניתוב העכשוי ונותן לו את העיצוב של*/}
            <NavLink to='login' className={'link'}>Login</NavLink>
            <NavLink to='register' className={'link'}>Register</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
PageNotFound.jsximport React, { useEffect } from "react";
export const PageNotFound = () => {
    useEffect(() => {
        document.title = 'page not found'
    })
    return <>
        <h1>Page Not Found!</h1>
    </>
}D:\הנדסאים\react\react-project\src
register.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Register = () => {
    // שימוש במשתנה מצביע ע"מ שנוכל לשלוף נתונים מתוך הפקד
    const nameRef = useRef()
    const pwRef = useRef()
    // הגדרת משתנה מסוג navigate
    const navigate = useNavigate()
    //פונקציה ששומרת את נתוני המשתמש ב localstorage
    const register = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        localStorage.setItem('username', nameRef.current.value)
        localStorage.setItem('password', pwRef.current.value)
        //אם כן ננתב מתוך הפונקציה ונשלח כפרמטר את שם המשתמש
        navigate(`/details/${nameRef.current.value}`)
        // navigate('/details/'+nameRef.current.value)
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={register}>register</button>
    </>
}D:\הנדסאים\react\react-project\src
Routing.jsximport React from "react";
import { Route, Routes } from "react-router";
import { Login } from "../lesson6/login";
import { Tick } from "../lesson5/Tick";
import { PageNotFound } from "./PageNotFound";
import { Register } from "./register";
import { Details } from "./details";
export const Routing = () => {
    return <>
        {/* הצהרה על הניתובים */}
        <Routes>
            {/* עבור ניתוב ספציפי איזו קומפוננטה תטען */}
            <Route path='/' element={<Login />}></Route>
            <Route path='login' element={<Login />}></Route>
            <Route path='register' element={<Register />}></Route>
            <Route path='details/:name' element={<Details />}></Route>
            {/* <Route element={<PageNotFound />}></Route> */}
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Provider } from "react-redux";
import store from "./redux/Store";
import { SignUp } from "./SignUp";
import { Users } from "./Users";
export const Main = () => {
    return <>
        {/* טעינת קומפוננטה מריאקט רידקס */}
        {/* הפרוביידר מקבל כפרופס את המחסן */}
        {/* כל קומפוננטה שתטען בתוך הפרוביידר תכיר את המחסן */}
        <Provider store={store}>
            <Users></Users>
            <SignUp></SignUp>
        </Provider>
    </>
}D:\הנדסאים\react\react-project\src
PersonalArea.jsximport React, { useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { updateUser } from "./redux/Action";
export const PersonalArea = (props) => {
    const dispatch = useDispatch()
    const currentUser = useSelector(store => {
        return store.currentUser
    })
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    const send = () => {
        constole.log(currentUser);
        const user = {
            id: currentUser.id,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        //כלל של אובייקט json
        //אם המפתח והערך בעלי אותו שם מספיק לכתוב רק פעם אחת
        // { user:user } = { user }
        dispatch(updateUser({ id: currentUser.id, user }))
        props.close()
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>save changes</button>
    </>
}D:\הנדסאים\react\react-project\src
SignUp.jsximport React, { useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { addUser } from "./redux/Action";
export const SignUp = () => {
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    //משתנה שנפעיל עליו את הפונקציות של האקשנס
    //הדיספץ' ישלח את הפונקציה לאויר והרדוסר יתפוס אותו ויפעיל את הפונקציה המתאימה
    const dispatch = useDispatch()
    const id = useSelector(store => {
        return store.maxId
    })
    const send = () => {
        const user = {
            id: id + 1,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        dispatch(addUser(user))
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>sign up</button>
    </>
}D:\הנדסאים\react\react-project\src
Users.jsximport React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { PersonalArea } from "./PersonalArea";
import { setCurrentUser } from "./redux/Action";
export const Users = () => {
    const [show, setShow] = useState(false)
    const dispatch = useDispatch()
    //פונקציה שמאפשרת שליפה מהסטור
    //מקבלת פונקציה אנונימית ומחזירה את הנתונים המבוקשים
    const list = useSelector(store => {
        return store.users
    })
    const openUpdate = (user) => {
        setShow(true)
        dispatch(setCurrentUser(user))
    }
    const closeUpdate=()=>{
        setShow(false)
    }
    return <>
        <ul>
            {list.map((item, index) => (<li key={index}>{item.firstName} <button onClick={() => { openUpdate(item) }}>update</button></li>))}
        </ul>
        {show && <PersonalArea close={closeUpdate}></PersonalArea>}
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Provider } from "react-redux";
import store from "./redux/Store";
import { SignUp } from "./SignUp";
import { Users } from "./Users";
export const Main = () => {
    return <>
        {/* טעינת קומפוננטה מריאקט רידקס */}
        {/* הפרוביידר מקבל כפרופס את המחסן */}
        {/* כל קומפוננטה שתטען בתוך הפרוביידר תכיר את המחסן */}
        <Provider store={store}>
            <Users></Users>
            <SignUp></SignUp>
        </Provider>
    </>
}D:\הנדסאים\react\react-project\src
PersonalArea.jsximport React, { useEffect, useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { updateUser } from "./redux/UserAction";
export const PersonalArea = (props) => {
    const dispatch = useDispatch()
    var currentUser = useSelector(store => {
        return store.userReducer.currentUser
    })
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    const send = () => {
        constole.log(currentUser);
        const user = {
            id: currentUser.id,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        //כלל של אובייקט json
        //אם המפתח והערך בעלי אותו שם מספיק לכתוב רק פעם אחת
        // { user:user } = { user }
        dispatch(updateUser({ id: currentUser.id, user }))
        props.close()
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>save changes</button>
    </>
}D:\הנדסאים\react\react-project\src
SignUp.jsximport React, { useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { addUser } from "./redux/UserAction";
export const SignUp = () => {
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    //משתנה שנפעיל עליו את הפונקציות של האקשנס
    //הדיספץ' ישלח את הפונקציה לאויר והרדוסר יתפוס אותו ויפעיל את הפונקציה המתאימה
    const dispatch = useDispatch()
    const id = useSelector(store => {
        return store.userReducer.maxId
    })
    const send = () => {
        const user = {
            id: id + 1,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        dispatch(addUser(user))
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>sign up</button>
    </>
}D:\הנדסאים\react\react-project\src
Users.jsximport React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { PersonalArea } from "./PersonalArea";
import { removeUser, setCurrentUser } from "./redux/UserAction";
export const Users = () => {
    const [show, setShow] = useState(false)
    const dispatch = useDispatch()
    //פונקציה שמאפשרת שליפה מהסטור
    //מקבלת פונקציה אנונימית ומחזירה את הנתונים המבוקשים
    const list = useSelector(store => {
        return store.userReducer.users
    })
    const openUpdate = (user) => {
        constole.log(user);
        setShow(true)
        dispatch(setCurrentUser(user))
    }
    const closeUpdate = () => {
        setShow(false)
    }
    const deleteUser=(index)=>{
        dispatch(removeUser(index))
    }
    return <>
        <ul>
            {list.map((item, index) =>
            (<li key={index}>{item.firstName}
                <button onClick={() => { openUpdate(item) }}>update</button>
                <button onClick={() => { deleteUser(index) }}>delete</button>
            </li>))}
        </ul>
        {show && <PersonalArea close={closeUpdate}></PersonalArea>}
    </>
}D:\הנדסאים\react\react-project\src
Form.jsximport React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { addUser } from "../lesson7/redux/Action";
export const Form = () => {
    //משתנה שנפעיל עליו את הפונקציות של האקשנס
    //הדיספץ' ישלח את הפונקציה לאויר והרדוסר יתפוס אותו ויפעיל את הפונקציה המתאימה
    const dispatch = useDispatch()
    const id = useSelector(store => {
        return store.maxId
    })
    const [errors, setErrors] = useState({ firstname: '', lastname: '', email: '', cell: '', password: '' })
    const validFN = (e) => {
        const firstname = /^\w{5,15}$/
        if (e.target.value.length === 0) {
            setErrors({ ...errors, firstname: 'שדה חובה!' })
        }
        else if (!e.target.value.match(firstname)) {
            setErrors({ ...errors, firstname: 'שם חייב להכיל בין 5 ל 15 תווים' })
        }
        else setErrors({ ...errors, firstname: '' })
    }
    const validLN = (e) => {
        const lastname = /^\w{5,15}$/
        if (e.target.value.length === 0) {
            setErrors({ ...errors, lastname: 'שדה חובה!' })
        }
        else if (!e.target.value.match(lastname)) {
            setErrors({ ...errors, lastname: 'שם חייב להכיל בין 5 ל 15 תווים' })
        }
        else setErrors({ ...errors, lastname: '' })
    }
    const validEmail = (e) => {
        if (e.target.value.length === 0) {
            setErrors({ ...errors, email: 'שדה חובה!' })
        }
        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e.target.value)) {
            setErrors({ ...errors, email: 'כתובת האימייל אינה חוקית!' })
        }
        else setErrors({ ...errors, email: '' })
    }
    const validCell = (e) => {
        const cell = /^[0]+\w{8,9}$/
        if (!e.target.value.match(cell)) {
            setErrors({ ...errors, cell: 'מספר טלפון אינו תקין!' })
        }
        else setErrors({ ...errors, cell: '' })
    }
    const validPW = (e) => {
        const pw = /^[A-Za-z]+\w{7,14}$/
        if (e.target.value.length === 0) {
            setErrors({ ...errors, password: 'שדה חובה!' })
        }
        else if (e.target.value.match(pw)) {
            setErrors({ ...errors, password: 'סיסמה חייבת להתחיל באות אנגלית ויכולה להכיל בין 7 ל 14 תווים' })
        }
        else setErrors({ ...errors, password: '' })
    }
    const send = (event) => {
        //שמחפש לעבור לדף אחר submit ביטול ברירת המחדל של
        event.preventDefault();
        constole.log(event);
        const user = {
            id: id + 1,
            firstName: event.target[0].value,
            lastName: event.target[1].value,
            eMail: event.target[2].value,
            cell: event.target[3].value,
            password: event.target[4].value
        }
        constole.log(user);
        // //הפעלת האקשן באמצעות הדיספץ
        dispatch(addUser(user))
    }
    return <>
        <form onSubmit={(e) => send(e)}>
            <label htmlFor={'firstname'}>first name:</label><br></br>
            <input id={'firstname'} onChange={(e) => validFN(e)}></input>
            {errors.firstname !== '' && <p>{errors.firstname}</p>}
            <br></br>
            <label htmlFor={'last name'}>last name:</label><br></br>
            <input id={'lastname'} onChange={(e) => validLN(e)}></input>
            {errors.lastname !== '' && <p>{errors.lastname}</p>}
            <br></br>
            <label htmlFor={'email'}>email:</label><br></br>
            <input id={'email'} type={'email'} onChange={(e) => validEmail(e)}></input>
            {errors.email !== '' && <p>{errors.email}</p>}
            <br></br>
            <label htmlFor={'cell'}>cell:</label><br></br>
            <input id={'cell'} onChange={(e) => validCell(e)}></input>
            {errors.cell !== '' && <p>{errors.cell}</p>}
            <br></br>
            <label htmlFor={'password'}>password:</label><br></br>
            <input id={'password'} type={'password'} onChange={(e) => validPW(e)}></input>
            {errors.password !== '' && <p>{errors.password}</p>}
            <br></br>
            <input type={'submit'} value={'sign up'}></input><br></br>
        </form>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Provider } from "react-redux";
import { Form } from "./Form";
import store from "../lesson7/redux/Store";
import { Users } from "../lesson7/Users";
export const Main = () => {
    return <>
        {/* טעינת קומפוננטה מריאקט רידקס */}
        {/* הפרוביידר מקבל כפרופס את המחסן */}
        {/* כל קומפוננטה שתטען בתוך הפרוביידר תכיר את המחסן */}
        <Provider store={store}>  
            <Form></Form>
            <Users></Users>
        </Provider>
    </>
}D:\הנדסאים\react\react-project\src
AddCategorey.jsximport { useDispatch, useSelector } from "react-redux"
import { addCategorey } from "./redux/Action"
import {useState} from 'react'
export const AddCategorey=()=>{
    const categoreys=useSelector(x=>x.Categories)
    const [newCategorey, setCategorey] = useState("")
    const dispatch=useDispatch()
    const add=(event)=>{    
        event.preventDefault();
        dispatch(addCategorey(newCategorey))
    }
    return <>
        <div>
            {categoreys.map(x => <h1>{x.name}</h1>)}
                <form onSubmit={(e) => add(e)}>
                <input id={'name'} placeholder="Categoreys"onBlur={(e) => setCategorey({ ...newCategorey, name: e.target.value })}></input>
        <button id={'submit'}>send</button>
        </form>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
AddLevel.jsximport { useDispatch, useSelector } from "react-redux"
import { useState } from 'react'
import { addLevel } from "./redux/Action"
export const AddLevel = () => {
    const [newLevel, setLevel] = useState("")
    const levels = useSelector(x => x.Levels)
    const dispatch=useDispatch()
    const add=(event)=>{ 
        event.preventDefault();
        console.log(newLevel)
        dispatch(addLevel(newLevel))
    }
    return <>
        <div>
            {levels.map(x => <h1>{x.name}</h1>)}
                <form onSubmit={(e) => add(e)}>
                <input id={'name'} placeholder="level"onBlur={(e) => setLevel({ ...newLevel, name: e.target.value })}></input>
        <button id={'submit'}>send</button>
        </form>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
AddReply.jsximport { useState } from "react"
import { useSelector } from "react-redux"
import { useDispatch } from "react-redux"
import {addReplay} from "./redux/Action";
import { useNavigate } from "react-router-dom";
import { useParams } from 'react-router-dom'
export const AddReply = () => {
    let p = useParams()
    const comments=useSelector(x=>x.Replies)
    const nav = useNavigate()
    const[newComments,setNewComments]=useState("")
    const dispatch=useDispatch()
    debugger
    const send = (event) => {
        event.preventDefault();
        setNewComments({ ...newComments, name: p.name})
        setNewComments({ ...newComments, password:p.password })
        dispatch(addReplay(newComments))   
    }
return<>
<div>
<h1>{p.name}</h1>
<form onSubmit={(e) => send(e)}>
<textarea id={'reply'} placeholder="input reply" onBlur={(e) => setNewComments({ ...newComments, reply: e.target.value ,password:p.password,name: p.name})} ></textarea>
<button id={'submit'}>send</button>
    </form>
</div>
</>
}
D:\הנדסאים\react\react-project\src
AllRecipes.jsximport { useState } from 'react'
import { useSelector } from 'react-redux'
import { useNavigate, Outlet } from 'react-router-dom'
import "../css.css/StyleRecipe.css"
import { Recipe } from './Recipe'
export const AllRecipes = () => {
  const [valueType, setValueType] = useState("")
  const [valueLevel, setValueLevel] = useState("")
  const categories = useSelector(x => x.Categories)
  const levels = useSelector(x => x.Levels)
  const Recipes = useSelector(x => x.Recipes)
  const newRecipes = Recipes.filter(i => (i.type == valueType) && (i.level == valueLevel))
  if ((valueType == "כל המתכונים") && (valueLevel == "כל המתכונים"))
    console.log(newRecipes)
  return <>
    <div className='all'>
      {(((valueType == "") || (valueType == 'כל המתכונים')) && Recipes.map(i => <Recipe data={i}></Recipe>))}
      {(((valueType != "") && newRecipes.map(i => <Recipe data={i}></Recipe>)))}
    </div>
    {<select onBlur={(e) => { setValueType(e.target.value) }}>{categories.map(x => <option>{x.name}</option>)}</select>}
    {<select onBlur={(e) => { setValueLevel(e.target.value) }}>{levels.map(x => <option>{x.name}</option>)}</select>}
  </>
}D:\הנדסאים\react\react-project\src
Details.jsximport { useParams } from 'react-router-dom'
import { NavLink, Outlet } from "react-router-dom"
import "../css.css/StyleNav.css"
import { useSelector } from "react-redux"
export const Details = () => {
   let p = useParams()
   const CaurrentUser = useSelector(x => x.CaurrentUser)
   const ingredientsToRecipes = useSelector(x => x.IngredientsToRecipes)
   const maneger = useSelector(x => x.Maneger)
   const user = useSelector(x => x.Users)
   const thisIngredients = ingredientsToRecipes.filter(i => (i.nameRecipe == p.name))
   const nameSender = user.filter(x => (x.password == p.password))
   return <>
      {<div className={'nav'}>
         {(CaurrentUser.email != "")
            &&
            <NavLink to='AddReply' className={'link'} data={p.name}>AddReply</NavLink>}
         {(CaurrentUser.email != "")
            &&
            <NavLink to='Reply' className={'link'} data={p.name}>Reply</NavLink>}
      </div>}
      <br></br>
      {
         <div id='detiles'>
            <img src={`${process.env.PUBLIC_URL}/img/${p.picture}`} width={'200px'} height={'auto'}></img>
            <h1>{p.name}</h1>
            <h2>פרטים נוספים</h2>
            {<p>
               <h4>level: {p.level}</h4>
               <h4>time: {p.time}</h4>
               <h4>type: {p.type}</h4>
               <h4>sender: {nameSender[0].firstName}</h4>
               <h4>text: {p.text}</h4>
            </p>}
            <p>חומרים:
               {thisIngredients.map(x => <h1>{x.nameIngredient}</h1>)}</p>
         </div>
      }
      <Outlet></Outlet>
   </>
}D:\הנדסאים\react\react-project\src
HomePage.jsximport { useSelector } from "react-redux"
export const Home = () => {
    <br></br>
    const CaurrentUser=useSelector(x=>x.CaurrentUser)
    const Users=useSelector(x=>x.Users)
    const ingredientToRecipe=useSelector(x=>x.IngredientsToRecipes)
    return <>
    <br></br>
       <img src={`${process.env.PUBLIC_URL}/img/${'recipe.jpg'}`} width={'1520px'}height={'auto'}></img> 
    </>
}D:\הנדסאים\react\react-project\src
Ingredients.jsximport { useState } from "react"
import { useSelector } from "react-redux"
export const Ingredients=()=>{
    const [checked,setChecked]=useState()
    const check=(e)=>{
        setChecked(e.target.checked)
      }
    const ingredients=useSelector(x=>x.Ingredients)
    return<>
    <div>{ingredients.map(i=><p>{i.name}<input type="checkbox" onChange={e=>check(e)}></input></p>)}</div>
    </>
}D:\הנדסאים\react\react-project\src
Login.jsximport { Link, NavLink, useNavigate } from "react-router-dom"
import { useRef, useState } from "react"
import { SingUp } from "./SingUp"
import { useDispatch, useSelector } from "react-redux"
import { addCaurrentUser } from "./redux/Action"
import { Maneger } from "./Maneger"
export const Login = () => {
    const nav = useNavigate()
    const Users = useSelector(x => x.Users)
    let flag = false
    const [CaurrentUser, setCaurrentUser] = useState({})
    const manager=useSelector(x=>x.Maneger)
    const dispatch=useDispatch()
    const send = (event) => {
        event.preventDefault();
       (CaurrentUser.password==manager.password && CaurrentUser.email==manager.email)&&
       nav('/Maneger')
        Users.map(i => {
             (i.password == CaurrentUser.password && i.email == CaurrentUser.email) && (flag = true)&&
            dispatch(addCaurrentUser(i)) 
            })
             flag == true && nav('/Home') 
             flag == false && nav('/SingUp')
    }
    return <>
    <div>טופס כניסה</div>
    <h3>Login  </h3>
    <form onSubmit={(e) => send(e)}>
        <label htmlFor={'email'}>email:</label><br></br>
        <input id={'email'} placeholder="input email" onBlur={(e) => setCaurrentUser({ ...CaurrentUser, email: e.target.value })}></input>
        <br></br>
        <label htmlFor={'password'}>password:</label><br></br>
        <input id={'password'} placeholder="input password" onBlur={(e) => setCaurrentUser({ ...CaurrentUser, password: e.target.value })}></input>
        <button id={'submit'}>send</button>
        <h1>{CaurrentUser.email}</h1>
    </form>
</>
}D:\הנדסאים\react\react-project\src
Main.jsximport { BrowserRouter } from "react-router-dom"
import { Nav } from "./Nav"
import { Routing } from "./Routing"
import { Provider } from "react-redux"
import Store from './redux/Store'
export const Main = () => {
    return <>
    <Provider store={Store}>
    <BrowserRouter>
    <Nav></Nav>
    <Routing></Routing>
    </BrowserRouter>
    </Provider>
    </>
}D:\הנדסאים\react\react-project\src
Maneger.jsximport { NavLink, Outlet } from "react-router-dom"
export const Maneger = () => {
    return<>
    <div className={'nav'}>
     <NavLink to='AddLevel' className={'link'}>AddLevel</NavLink>
     <NavLink to='AddCategorey' className={'link'}>AddCategorey</NavLink>
     </div>
     <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
MyRecipePage.jsximport { useSelector } from "react-redux"
export const MyRecipePage=()=>{
const recipes=useSelector(x=>x.Recipes)
const CaurrentUser=useSelector(x=>x.CaurrentUser)
const MyRecipes=recipes.filter(i=>(i.password==CaurrentUser.password))
return<>
{MyRecipes.map(x=><p>{x.name}</p>)}
</>
}D:\הנדסאים\react\react-project\src
MyRecipes.jsximport { useSelector } from "react-redux"
export const MyRecipes=()=>{
    const recipes=useSelector(x=>x.Recipes)
    const CaurrentUser=useSelector(x=>x.CaurrentUser)
const MyRecipes=recipes.filter(i=>(CaurrentUser.password==recipes.password))
return<>
{
    <h1>fygy</h1>}
    {MyRecipes.map(x=><p>{x.name}</p>)}
</>
}D:\הנדסאים\react\react-project\src
Nav.jsximport { NavLink } from "react-router-dom"
 import "../css.css/StyleNav.css"
import { useSelector } from "react-redux"
export const Nav = () => {
    const CaurrentUser=useSelector(x=>x.CaurrentUser)
    const maneger=useSelector(x=>x.Maneger)
    debugger
    return <>
    <div className={'nav'}>
     <NavLink to='Home' className={'link'}>Home</NavLink>
     <NavLink to='Login' className={'link'}>Login</NavLink>
     <NavLink to='SingUp' className={'link'}>SingUp</NavLink>
     <NavLink to='AllRecipes' className={'link'}>AllRecipes</NavLink>
    {
    CaurrentUser.email==maneger.email &&
     <NavLink to='Maneger' className={'link'}>Maneger</NavLink>
    }
    {
    CaurrentUser.email!="" &&
     <NavLink to='PrivateAdmin' className={'link'}>{CaurrentUser.firstName}</NavLink>
    }
</div>
    </>
}D:\הנדסאים\react\react-project\src
PrivateAdmin.jsximport { NavLink ,Outlet} from "react-router-dom"
import "../css.css/StyleNav.css"
export const PrivateAdmin = () => {
    return <>
    <div className={'nav'}>
     <NavLink to='MyRecipePage' className={'link'}>MyRecipes</NavLink>
     <NavLink to='ToAddRecipe' className={'link'}>ToAddRecipe</NavLink>
     </div>
     <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
Recipe.jsximport "../css.css/StyleRecipe.css"
import { useNavigate } from "react-router-dom"
export const Recipe = (props) => {
    const p = props.data
    let nav = useNavigate()
    const show = (c) => {
        nav(`/Details/${c.name}/${c.level}/${c.time}/${c.type}/${c.picture}/${c.password}/${c.text}`)
    }
    return <>
        <div className="recipe">
            <p id={p.type}>
                <img src={`${process.env.PUBLIC_URL}/img/${p.picture}`} width={'200px'} height={'auto'}></img>
                <br></br>
                {p.name}
            </p>
            <button onClick={() => show(props.data)}>show details</button>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
Reply.jsximport { useSelector } from "react-redux/es/hooks/useSelector"
import { useParams } from 'react-router-dom'
export const Reply = () => {
    const replies=useSelector(x=>x.Replies)
    const user=useSelector(x=>x.Users)
    let p = useParams()
    debugger
    const a= replies.filter(i => (i.name == p.name))
    console.log(a)
    const b=user.filter(i=>(i.password==p.password))
return<>
     {a.map(x=><h1> comment: {x.reply},name:{x.password}</h1> )}
    {b.map(x=><p>{x.firstName}</p>)}  
</>
}
D:\הנדסאים\react\react-project\src
Routing.jsximport { Route, Routes } from 'react-router-dom'
// לשים לב שזה אות קטנה
 import { Home } from './HomePage' 
import { Login } from './Login' 
import { SingUp } from './SingUp'
import { AllRecipes } from './AllRecipes'
import {PrivateAdmin} from './PrivateAdmin'
import { ToAddRecipes } from './ToAddRecipe'
import { MyRecipePage } from './MyRecipePage'
import { Details } from './Details'
import { Reply } from './Reply'
import { AddReply } from './AddReply'
import { Ingredients } from './Ingredients'
import {  Appp } from './try'
import { Maneger } from './Maneger'
import{AddLevel} from './AddLevel'
import {AddCategorey} from './AddCategorey'
export const Routing = () => {
    return <>
    <Routes>
    <Route path={'Appp'} element={<Appp></Appp>}></Route>
        <Route path={'Home'} element={<Home></Home>}></Route> 
        <Route path={'Login'} element={<Login></Login>}></Route>
        <Route path={'SingUp'} element={<SingUp></SingUp>}></Route>
        <Route path={'AllRecipes'} element={<AllRecipes></AllRecipes>}></Route>
        <Route path={'PrivateAdmin'} element={<PrivateAdmin></PrivateAdmin>}>
           <Route path={'ToAddRecipe'} element={<ToAddRecipes></ToAddRecipes>}>
             <Route path={'Ingredients'} element={<Ingredients></Ingredients>}></Route> </Route> 
            <Route path={'MyRecipePage'} element={<MyRecipePage></MyRecipePage>}></Route>
        </Route>
        <Route path={'Maneger'} element={<Maneger></Maneger>}>
        <Route path={'AddLevel'} element={<AddLevel></AddLevel>}></Route>
        <Route path={'AddCategorey'} element={<AddCategorey></AddCategorey>}></Route>
        </Route>
        <Route path={'Details/:name/:level/:time/:type/:picture/:password/:text'} element={<Details></Details>}>
            <Route path={'Reply'} element={<Reply></Reply>}></Route>
            <Route path={'AddReply'} element={<AddReply></AddReply>}></Route>
         </Route>
    </Routes>
    </>
}D:\הנדסאים\react\react-project\src
SingUp.jsximport { useState } from "react"
import { addCaurrentUser, addUser } from "./redux/Action"
import {  useNavigate } from "react-router-dom"
import { useDispatch, useSelector } from "react-redux"
import swal from "sweetalert"
export const SingUp = () => {
    const [errors,setErrors]=useState({email:'', password:''})
const validEmail=(e)=>{
        if(e.target.value.length===0){
         setErrors({...errors, email:'שדה חובה!'})
        }
        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e.target.value)){
        setErrors({...errors, email:'כתובת אימייל אינה חוקית'})
        }
        else setErrors({...errors, email:''})
    }
    const nav = useNavigate()
   const dispatch=useDispatch()
    const [currentUser,setCurrentUser]=useState("")  
    const Users = useSelector(x => x.Users)
    const send = (event) => {
        event.preventDefault();
        dispatch(addCaurrentUser(currentUser))
         dispatch(addUser(currentUser))
        nav('/Home')
        swal(`שלום ${currentUser.firstName}!`, "נרשמת בהצלחה למערכת")
   }         
    return <>
    <form onSubmit={(e) => send(e)}>
        <label htmlFor={'firstName'}>firstName:</label><br></br>
        <input id={'firstName'} placeholder="input firstName" onBlur={(e) => setCurrentUser({ ...currentUser, firstName: e.target.value })}></input>
        <br></br>
        <label htmlFor={'lastName'}>lastName:</label><br></br>
        <input id={'lastName'} placeholder="input lastName" onBlur={(e) => setCurrentUser({ ...currentUser, lastName: e.target.value })}></input>
        <br></br>
        <label htmlFor={'email'}>email:</label><br></br>
        <input id={'email'} placeholder="input email" onChange={(e) =>validEmail(e)}></input>
         {errors.email !='' && <p>{errors.email}</p>}
        <br></br>
        <label htmlFor={'password'}>password:</label><br></br>
        <input id={'password'} placeholder="input password" onBlur={(e) => setCurrentUser({ ...currentUser, password: e.target.value })}></input>
        <br></br>
        <button id={'submit'}>send</button>
    </form>
    </>
}
D:\הנדסאים\react\react-project\src
ToAddRecipe.jsximport { useState } from "react"
import { addIngrediantToRecipe, addRecipe } from "./redux/Action";
import { useDispatch, useSelector } from "react-redux";
import { Outlet, useNavigate } from "react-router-dom";
export const ToAddRecipes = () => {
  const categories = useSelector(x => x.Categories)
  const level = useSelector(x => x.Levels)
  const ingredients = useSelector(x => x.Ingredients)
  const nav = useNavigate()
  const CaurrentUser = useSelector(x => x.CaurrentUser)
  const dispatch = useDispatch()
  const [ingredientToRecipe, setIngredientToRecipe] = useState({
    nameRecipe: "",
    nameIngredient: ""
  })
  const [choseIngredient, setChoseIngredient] = useState({
    ingredient: [],
    response: [],
  });
  const send = (event) => {
    event.preventDefault();
    const u = {
      name: event.target[0].value,
      level: event.target[1].value,
      time: event.target[2].value,
      type: event.target[3].value,
      picture: event.target[4].value,
      password: CaurrentUser.password,
      text: event.target[5].value,
    }
    dispatch(addRecipe(u))
    choseIngredient.ingredient.map(x => input(x, u))
    nav('/AllRecipes')
  }
  const input = (x, u) => {
    const newI = {
      nameRecipe: u.name,
      nameIngredient: x
    }
    dispatch(addIngrediantToRecipe(newI))
  }
  const handleChange = (e) => {
    const { value, checked } = e.target;
    const { ingredient } = choseIngredient;
    if (checked) {
      setChoseIngredient({
        ingredient: [...ingredient, value],
        response: [...ingredient, value]
      });
    }
    else {
      setChoseIngredient({
        ingredient: ingredient.filter((e) => e !== value),
        response: ingredient.filter((e) => e !== value)
      });
    }
  }
  return <>
    {
      <form onSubmit={(e) => send(e)}>
        <label htmlFor={'name'}>שם מתכון:</label><br></br>
        <input id={'name'} placeholder="input name" ></input>
        <br></br>
        <label htmlFor={'level'}>level:</label><br></br>
        {<select >{level.map(x => <option>{x.name}</option>)}</select>}
        <br></br>
        <label htmlFor={'time'}>time:</label><br></br>
        <input id={'time'} placeholder="input time" ></input>
        <br></br>
        <label htmlFor={'type'}>type:</label><br></br>
        <select >{categories.map(x => <option>{x.name}</option>)}</select>
        <br></br>
        <label htmlFor={'picture'}>picture:</label><br></br>
        <input id={'picture'} placeholder="input picture" ></input>
        <br></br>
        <label htmlFor={'text'}>text:</label><br></br>
        <input id={'text'} placeholder="input text" ></input>
        <br></br>
        {ingredients.map(x => <div><input
          className="form-check-input"
          type="checkbox"
          name="ingredient"
          value={x.name}
          id="flexCheckDefault"
          onChange={handleChange} />
          <label>{x.name}</label>
        </div>)}
        <input placeholder="input new Ingredient" onBlur={(e) => {
          setChoseIngredient({
            ingredient: [...choseIngredient.ingredient, e.target.value],
            response: [...choseIngredient.ingredient, e.target.value]
          });
        }
        }></input>
        <textarea
          className="form-control text"
          name="response"
          value={choseIngredient.response}
          placeholder="The checkbox values will be displayed here "
          id="floatingTextarea2"
          style={{ height: "150px" }}
          onChange={handleChange}
        ></textarea>
        <button id={'submit'}>send</button>
      </form>}
    <Outlet></Outlet>
  </>
}D:\הנדסאים\react\react-project\src
try.jsx  export const Appp=()=>{
    return<>
    </>
}D:\הנדסאים\react\react-project\src
stor.jsx//immer - ספריה שמאפשרת עריכת משתנים סופיים - constant variables
import { produce } from 'immer';
import { createStore } from 'redux';
//State - משתנה גלובלי שיהיה מוכר לכל הקומפוננטות
//initialState = סטייט מאותחל
//שם מקובל - לא חובה
const initialState = {
    products: [
        {kod:11, name: 'cher', price: 100 },
        {kod:22, name: 'table', price: 700},
        {kod:33, name: 'sopa', price: 1080},
    ],
    currentProducts: { name: 'Annonymous' },
}
const reducer = produce((state, action) => {
    switch (action.type) {
        case 'SET_PRODUCT':
            state.products[action.payload.index] = action.payload.user
            break;
        case 'ADD_PRODUCT':
            state.products = [...state.products, action.payload]
            break;
        default:
            break;
    }
}, initialState)
//יצירת המחסן - מקבל את הרדיוסר
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
SelectCity.jsximport React from "react";
export const SelectCity = (props) => {
    const { cities, setCity } = props
    return <>
        <select onChange={setCity}>
            <option disabled selected>select city</option>
            {cities.map((item, index) => (<option key={index} value={item}>{item}</option>))}
        </select>
    </>
}D:\הנדסאים\react\react-project\src
SelectCountry.jsximport React from "react";
export const SelectCountry = (props) => {
    const { countries, setCountry } = props
    return <>
        <select onChange={setCountry}>
            <option disabled selected>select country</option>
            {countries.map((item, index) => (<option key={index} value={item}>{item}</option>))}
        </select>
    </>
}D:\הנדסאים\react\react-project\src
SelectMain.jsximport React from "react";
import { useState } from "react";
import { SelectCity } from "./SelectCity";
import { SelectCountry } from "./SelectCountry";
export const SelectMain = () => {
    const [selectedCountry, setSelectedCountry] = useState(null)
    const [selectedCity, setSelectedCity] = useState(null)
    const [isCity, setIsCity] = useState(false)
    const countriesAndCities = {
        Israel: ['Jerusalem', 'Bet Shemesh', 'Tzfat', 'Beitar', 'Ashdod', 'Haifa'],
        England: ['London', 'Gateshead', 'Mantchester'],
        Franch: ['Paris', 'Bordo'],
        Yemen: ['Tsana', 'Sinwan', 'Aden']
    }
    const countries = Object.keys(countriesAndCities)
    const cities = countriesAndCities[selectedCountry]
    function changeCountry(e) {
        setSelectedCountry(selectedCountry => e.target.value)
        setSelectedCity(null)
        setIsCity(true)
    }
    function changeCity(e) {
        setSelectedCity(e.target.value)
        setIsCity(false)
    }
    return <>
        {selectedCountry && <h3>Your Selection - Country: {selectedCountry}</h3>}
        {selectedCity && <h3>City :{selectedCity}</h3>}
        {/* <select onChange={changeCountry}>
            <option disabled selected>select country</option>
            {countries.map((item, index) => (<option key={index} value={item}>{item}</option>))}
        </select> */}
        {!isCity && <SelectCountry countries={countries} setCountry={changeCountry} ></SelectCountry>}
        {selectedCountry && isCity && <SelectCity cities={cities} setCity={changeCity}></SelectCity>}
        {/* <br></br>
        {selectedCountry &&
            <select onChange={changeCity}>
                <option disabled selected>select city</option>
                {cities.map((item, index) => (<option key={index} value={item}>{item}</option>))}
            </select>
        } */}
    </>
}D:\הנדסאים\react\react-project\src
Details.jsximport React from "react";
export const Details = (props) => {
    const { name, pw, list } = props
    return <>
        <h2>Hello {name}</h2>
        <h3>Your password is {pw}</h3>
        <h3>Your subjects are: </h3>
        {list.map(item => <label>{item},</label>)}
    </>
}D:\הנדסאים\react\react-project\src
Login.jsximport React, { useRef } from "react";
export default function Login(props) {
    const { name, password, page } = props
    const nameRef = useRef()
    const passwordRef = useRef()
    const send = () => {
        constole.log(nameRef);
        constole.log(passwordRef);
        //משתנה מסוג רף מכיל את הפקד שלו
        //current - הגישה לפקד תתבצע באמעצות 
        //value - הגישה לערך של הפקד
        name(nameRef.current.value)
        password(passwordRef.current.value)
        page(2)
    }
    // function send(){
    // }
    return <>
        {/* {nameRef && nameRef.current && nameRef.current.value && <h6> { nameRef.current.value }</h6>}
        {passwordRef && passwordRef.current && passwordRef.current.value && <h6>{passwordRef.current.value}</h6>} */}
        <input placeholder="input name" ref={nameRef}></input><br></br><br></br>
        <input type="password" placeholder="input password" ref={passwordRef}></input><br></br><br></br>
        <button onClick={send}>OK</button>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React, { useState } from "react";
import { Details } from "./Details";
import Login from "./Login";
import { Select } from "./Select";
export const Main = () => {
    const [name, setName] = useState()
    const [password, setPassword] = useState()
    const [subjects, setSubjects] = useState([])
    const [page, setPage] = useState(1)
    const list = ['Math', 'Java', 'C', 'C#', 'Angular', 'React', 'SQL', 'Python', 'Node.js', 'Assembler']
    const prev = '<<'
    const next = '>>'
    //העדפנו לשלוח את הפונקציה של ההוספה שיצרנו בעצמנו
    //כיון שאם היינו שולחות אם הפונקציה של סטייט
    //היינו צריכות לשלוח גם את הליסט בעצמו
    //כיון שמדובר בסטייט מסוג מערך שהעדכון שלו מצריך שפיכה של המערך הישן
    const addSubject = (newSubject) => {
        //פונקציית סט למערך יוצרת מערך חדש ושופכת לתוכו באמצעות שלש נקודות את כל האובייקטים שהיו במערך הישן ואח"כ תוסיף את האיבר החדש
        setSubjects([...subjects, newSubject])
        // constole.log(subjects);
    }
    return <>
        {page == 1 && <Login name={setName} password={setPassword} page={setPage}></Login>}
        {page == 2 && <Select list={list} add={addSubject} page={setPage}></Select>}
        {page == 3 && <Details name={name} pw={password} list={subjects}></Details>}<br></br>
        <button disabled={page <= 1} onClick={() => setPage(page => page - 1)}>{prev}</button><br></br>
        <button disabled={page >= 3} onClick={() => setPage(page => page + 1)}>{next}</button>
    </>
}D:\הנדסאים\react\react-project\src
Select.jsximport React from "react";
export const Select = (props) => {
    const { list, add, page } = props
    return <>
        {list.map((item, index) => (<>
            <Subject subject={item} add={add} key={index}></Subject>
            {/* <input type="checkbox" onChange={() => add(subject)}></input>
            <label>{subject}</label> */}
            <br></br>
        </>)
        )
        }
        <button onClick={() => page(3)}>send</button>
    </>
}
const Subject = (props) => {
    const { subject, add } = props
    return <>
        <input type="checkbox" onChange={() => add(subject)}></input>
        <label>{subject}</label>
    </>
}D:\הנדסאים\react\react-project\src
BlessCard.jsximport React from "react";
import './style.css'
export default function BlessCard(props) {
    return <>
        <div className={`bless ${props.gender}`}>
            <h1>Happy Purim!</h1>
            <img src={props.img}></img>
            <h2>LOVE {props.name}</h2>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
Console.jsximport React from "react"
import './style.css'
const Error = (props) => {
    return <>
        <div className={`err msg`}>{props.error}</div>
    </>
}
const Warning = (props) => {
    return <>
        <div className={`warn msg`}>{props.warning}</div>
    </>
}
const Info = (props) => {
    return <>
        <div className={`info msg`}>{props.info}</div>
    </>
}
export const constole = () => {
    return <>
        <Error error={'Js: connot assignment to a constatn variable'}></Error>
        <Warning warning={'Each child shuold has a unique key'}></Warning>
        <Info info={'Good Evening!'}></Info>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { constole } from "./constole";
import { DynamicStyle, InLineStyle } from "./StyleComp";
import Naama from '../assets/IMG_8098.jpg'
import YS from '../assets/TR2_8972.JPG'
import SHULAMIT from '../assets/TR2_8913.JPG'
import SHMUEL from '../assets/TR2_8960.JPG'
import BlessCard from "./BlessCard";
export const Main = () => {
    return <>
        {/* <constole></constole> */}
        {/* <DynamicStyle num={15}></DynamicStyle> */}
        {/* <DynamicStyle num={8}></DynamicStyle> */}
        {/* <InLineStyle color={'red'} bgColor={'black'} num={10}></InLineStyle> */}
        <BlessCard name={"Naama"} gender={'female'} img={Naama}></BlessCard>
        <BlessCard name={"Yosef Shalom"} gender={'male'} img={YS}></BlessCard>
        <BlessCard name={"Shulamit"} gender={'female'} img={SHULAMIT}></BlessCard>
        <BlessCard name={"Shmuel"} gender={'male'} img={SHMUEL}></BlessCard>
    </>
}D:\הנדסאים\react\react-project\src
StyleComp.jsximport React from "react";
export const DynamicStyle = (props) => {
    return <>
        <p className={props.num > 10 ? `big` : `small`}>{props.num}</p>
    </>
}
export const InLineStyle = (props) => {
    const style = {
        color: props.color,
        backgroundColor: props.bgColor
    }
    return <>
        <p style={style}>{props.num}</p>
        <p style={{ color: props.color, backgroundColor: props.bgColor }}>{props.num}</p>
    </>
}D:\הנדסאים\react\react-project\src
Contact.jsximport React, { useRef } from "react";
import { Outlet, useNavigate } from "react-router";
import { NavLink } from "react-router-dom";
export const Contact = () => {
    // const navigate = useNavigate()
    // const login = () => {
    //     navigate('login')
    // }
    // const register = () => {
    //     navigate('register')
    // }
    return <>
        {/* <button onClick={login}>login</button>
        <button onClick={register}>register</button> */}
        <NavLink to='login' className={'link'}>Login</NavLink>
        <NavLink to='register' className={'link'}>Register</NavLink>
        {/* הוספת הצהרה על אפשרות טעינת ילדים בקומפוננטה -  */}
        {/* טעינת ילד - אינה מחליפה את הקומפוננטה אלא טוענת בנוסף  */}
        <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
details.jsximport React from "react";
import { useParams } from "react-router";
export const Details = () => {
    //שליפת המשתנים שקבלנו כפרמטר
    const name = useParams().name
    return <>
        {/* הצגת שם המשתמש */}
        <h1>Hello {name}!</h1>
    </>
}D:\הנדסאים\react\react-project\src
login.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Login = () => {
    const nameRef = useRef()
    const pwRef = useRef()
    const navigate = useNavigate()
    const login = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        //הפונקציה שולפת את פרטי המשתמש מה loocalstorage
        //ובודקת האם הנתונים שהוכנסו זהים
        const user = localStorage.getItem('username')
        const pw = localStorage.getItem('password')
        if (nameRef.current.value === user && pwRef.current.value === pw) {
            //אם כן נבצע ניתוב ונשלח את השם כפרמטר
            navigate(`/details/${nameRef.current.value}`)
        }
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={login}>login</button>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { BrowserRouter } from "react-router-dom";
import { Nav } from "./Nav";
import { Routing } from "./Routing";
export const Main = () => {
    return <>
        {/* קומפוננטה שמנהלת את כל הניתובים */}
        <BrowserRouter>
            {/* nav טוענת את ה */}
            <Nav></Nav>
            {/* טוענת את כל הצהרות הניתובים */}
            <Routing></Routing>
        </BrowserRouter>
        {/* <BrowserRouter>
            <Nav></Nav>
            <Routes>
                <Route path='login' element={<Login />}></Route>
                <Route path='tick' element={<Tick />}></Route>
            </Routes>
        </BrowserRouter> */}
    </>
}D:\הנדסאים\react\react-project\src
Nav.jsximport React from "react";
import { Link, NavLink } from "react-router-dom";
import './style.css'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            {/* a- נגשת לשרת עבור שליפה של כל מחדש */}
            {/* <a></a> */}
            {/* קומפוננטה של ריאקט - link */}
            {/* link - טוען את היישום מקומית וניגש לשם לשלוף את הקומפוננטה הרצויה */}
            {/* <Link to='login' className={'link'}>Login</Link>
            <Link to='tick' className={'link'}>Tick</Link> */}
            {/* NavLink - active מזהה את הניתוב העכשוי ונותן לו את העיצוב של*/}
            {/* <NavLink to='login' className={'link'}>Login</NavLink>
            <NavLink to='register' className={'link'}>Register</NavLink> */}
            <NavLink to='contact' className={'link'}>Contact</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
register.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Register = () => {
    // שימוש במשתנה מצביע ע"מ שנוכל לשלוף נתונים מתוך הפקד
    const nameRef = useRef()
    const pwRef = useRef()
    // הגדרת משתנה מסוג navigate
    const navigate = useNavigate()
    //פונקציה ששומרת את נתוני המשתמש ב localstorage
    const register = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        localStorage.setItem('username', nameRef.current.value)
        localStorage.setItem('password', pwRef.current.value)
        //אם כן ננתב מתוך הפונקציה ונשלח כפרמטר את שם המשתמש
        navigate(`/details/${nameRef.current.value}`)
        // navigate('/details/'+nameRef.current.value)
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={register}>register</button>
    </>
}D:\הנדסאים\react\react-project\src
Routing.jsximport React from "react";
import { Route, Routes } from "react-router";
import { Login } from "./login";
import { Register } from "./register";
import { Details } from "./details";
import { Contact } from "./Contact";
import { PageNotFound } from "../../lesson6/PageNotFound";
import { BrowserRouter } from "react-router-dom";
export const Routing = () => {
    return <>
        {/* הצהרה על הניתובים */}
        <Routes>
            {/* עבור ניתוב ספציפי איזו קומפוננטה תטען */}
            <Route path='/' element={<Contact></Contact>}></Route>
            <Route path='contact' element={<Contact></Contact>}>
                <Route path='login' element={<Login></Login>}></Route>
                <Route path='register' element={<Register></Register>}></Route>
                <Route path='details/:name' element={<Details></Details>}></Route>
            </Route>
            <Route element={<PageNotFound></PageNotFound>}></Route>
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
Action.jsxexport const addUser = (user) => {
    return { type: 'ADD_USER', payload: user }
}
export const addRecipe = (recipe) => {
    return { type: 'ADD_RECIPE', payload: recipe }
}
export const addCaurrentUser = (user) => {
    return { type: 'ADD_CURRENT_USER', payload: user }
}
export const addIngrediantToRecipe= (ingredient) => {
    return { type: 'ADD_INGREDIANT_TO_RECIPE', payload: ingredient }}
export const addLevel = (level) => {
        return { type: 'ADD_LEVEL', payload: level }
}
export const addCategorey = (level) => {
    return { type: 'ADD_CATEGOREY', payload: level }
}
export const addReplay = (replay) => {
    return { type: 'ADD_REPLAY', payload: replay }
}D:\הנדסאים\react\react-project\src
Store.jsx//immer - ספריה שמאפשרת עריכת משתנים סופיים - constant variables
import { produce } from 'immer';
import { createStore } from 'redux';
//State - משתנה גלובלי שיהיה מוכר לכל הקומפוננטות
//initialState = סטייט מאותחל
//שם מקובל - לא חובה
const initialState = {
    Users: [
        // שינויים:
        //name=lastName && firstName
        //,phon:1234,address:"asxdcf" =מחקנו 
        { firstName: 'anonimy1', lastName: 'dddd', email: 'a123@gmail.com', password: '1' },
        { firstName: 'maneger', lastName: '', email: '111@gmail.com', password: '2' },
        { firstName: 'anonimy1', lastName: 'dddd', email: 'a123@gmail.com', password: '1' },
        { firstName: 'bbb', lastName: '', email: '111@gmail.com', password: '3' },
        { firstName: 'anonimy1', lastName: 'dddd', email: 'a123@gmail.com', password: '1' },
        { firstName: 'aaa', lastName: '', email: '111@gmail.com', password: '5' }
    ],
    // Recipes: [
    //     // { name: 'fish', instracshion: 'ffffff', level:"", time: 30, type: "parwe", picture:'1.jpg', password: '1357', text: 'tr' },
    //     { name: 'מאפינס',  level:"קל", time: 40, type: "parwe", picture:'1.jpg', password: '1', text: 'בתאבון'},
    // Recipes: [
    //     { name: 'מאפינס',level:"קל", time: 40, type: "parwe", picture: '1.jpg', password:1357, text: 'iiy'},
    //     { name: 'iceCream',level: "קשה", time: 20, type: "milky", picture: '1.jpg', password: 1357, text: 'tr' },
    //     { name: 'iceCqweream', level: "קל", time: 20, type: "milky", picture: '1.jpg', password: 57, text: 'tr' },
    //     { name: 'iceCqweream',  level: "קל", time: 20, type: "milky", picture: '1.jpg', password: 133, text: 'tr' }
    // ],
    Recipes: [
        // { name: 'fish', instracshion: 'ffffff', level:"", time: 30, type: "parwe", picture:'1.jpg', password: '1357', text: 'tr' },
        { name: 'מאפינס',  level:"קל", time: 40, type: "parwe", picture:'1.jpg', password: '1', text: 'בתאבון'},
        { name: 'פשטידה',  level:"בנוני", time: 40, type: "parwe", picture:'2.jpg', password: '1', text: 'בתאבון'},
        { name: 'מרק כתום',  level:"קשה", time: 40, type: "parwe", picture:'3.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שוקולד',  level:"קל", time: 40, type: "parwe", picture:'4.jpg', password: '3', text: 'בתאבון'},
        { name: 'פחזניות',  level:"קשה", time: 40, type: "parwe", picture:'5.jpg', password: '2', text: 'בתאבון'},    
        { name: 'מרק בצל',  level:"בנוני", time: 40, type: "parwe", picture:'6.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שוקולד בחושה',  level:"בנוני", time: 40, type: "parwe", picture:'7.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת וניל אישית',  level:"קל", time: 40, type: "parwe", picture:'8.jpg', password: '2', text: 'בתאבון'},
        { name: 'רולדת שוקולד ואגוזים',  level:"בנוני", time: 40, type: "parwe", picture:'9.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגיות שוקולד ציפס',  level:"בנוני", time: 40, type: "parwe", picture:'10.jpg', password: '1', text: 'בתאבון'},
        { name: 'קינוח משמש',  level:"קשה", time: 40, type: "parwe", picture:'11.jpg', password: '1', text: 'בתאבון'},
        { name: 'מאפינס וניל',  level:"קל", time: 40, type: "parwe", picture:'12.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגת כדורגל',  level:"קשה", time: 40, type: "parwe", picture:'13.jpg', password: '1', text: 'בתאבון'},
        { name: 'קרמשניט',  level:"בנוני", time: 40, type: "parwe", picture:'14.jpg', password: '1', text: 'בתאבון'},
        { name: 'וופל בלגי',  level:"בנוני", time: 40, type: "parwe", picture:'15.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגת שמרים',  level:"בנוני", time: 40, type: "parwe", picture:'16.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגיות שוקולד ציפס הפוכות',  level:"בנוני", time: 40, type: "parwe", picture:'17.jpg', password: '1', text: 'בתאבון'},
        { name: 'פאי תותים אישי',  level:"קשה", time: 40, type: "parwe", picture:'18.jpg', password: '1', text: 'בתאבון'},
        { name: 'בראוניז עם קצפת',  level:"בנוני", time: 40, type: "parwe", picture:'19.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגת תפוחים',  level:"בנוני", time: 40, type: "parwe", picture:'20.jpg', password: '2', text: 'בתאבון'},
        { name: 'טורט וניל',  level:"קל", time: 40, type: "parwe", picture:'21.jpg', password: '2', text: 'בתאבון'},
        { name: 'רוגלעך',  level:"בנוני", time: 40, type: "parwe", picture:'22.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שמרים גבינה',  level:"קשה", time: 40, type: "milky", picture:'23.jpg', password: '2', text: 'בתאבון'},
        { name: 'כדורי חלומי',  level:"קל", time: 40, type: "milky", picture:'24.jpg', password: '2', text: 'בתאבון'},
        { name: 'מרק שום',  level:"בנוני", time: 40, type: "milky", picture:'25.jpg', password: '2', text: 'בתאבון'},
        { name: 'גלי תות וקצפת',  level:"קל", time: 40, type: "milky", picture:'26.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שוקולד גבינה',  level:"בנוני", time: 40, type: "milky", picture:'27.jpg', password: '2', text: 'בתאבון'},
        { name: 'גלידת ריבת חלב',  level:"קל", time: 40, type: "milky", picture:'28.jpg', password: '2', text: 'בתאבון'},
        { name: 'קינוח שכבות קצפת',  level:"קשה", time: 40, type: "milky", picture:'29.jpg', password: '2', text: 'בתאבון'},
        { name: 'פנקייקס',  level:"בנוני", time: 40, type: "milky", picture:'30.jpg', password: '3', text: 'בתאבון'},
        { name: 'גלידת מילקי',  level:"קל", time: 40, type: "milky", picture:'31.jpg', password: '3', text: 'בתאבון'},
        { name: 'גלידת בננה',  level:"קל", time: 40, type: "milky", picture:'32.jpg', password: '3', text: 'בתאבון'},
        { name: 'קינוח אוכמניות',  level:"קשה", time: 40, type: "milky", picture:'33.jpg', password: '3', text: 'בתאבון'},
        { name: 'פנקייקס ממולאים בריבת חלב',  level:"בנוני", time: 40, type: "milky", picture:'34.jpg', password: '3', text: 'בתאבון'},
        { name: 'קנאפה אישית',  level:"קל", time: 40, type: "milky", picture:'35.jpg', password: '5', text: 'בתאבון'},
        { name: 'גלידת שוקולד',  level:"בנוני", time: 40, type: "milky", picture:'36.jpg', password: '3', text: 'בתאבון'},
        { name: 'קנאפה',  level:"קל", time: 40, type: "milky", picture:'37.jpg', password: '3', text: 'בתאבון'},
        { name: 'טרטל חלווה פקאן',  level:"קשה", time: 40, type: "milky", picture:'38.jpg', password: '3', text: 'בתאבון'},
        { name: 'קינוח ריבת חלב',  level:"בנוני", time: 40, type: "meats", picture:'39.jpg', password: '3', text: 'בתאבון'},
        { name: 'גלידת פקאן',  level:"בנוני", time: 40, type: "milky", picture:'40.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוגת ביסקוטים',  level:"קשה", time: 40, type: "milky", picture:'41.jpg', password: '4', text: 'בתאבון'},
        { name: 'גלידת אוראו',  level:"קל", time: 40, type: "milky", picture:'42.jpg', password: '4', text: 'בתאבון'},
        { name: 'מילקשייק תותים',  level:"קל", time: 40, type: "milky", picture:'43.jpg', password: '4', text: 'בתאבון'},
        { name: 'סלט סטייק',  level:"קשה", time: 40, type: "milky", picture:'44.jpg', password: '2', text: 'בתאבון'},
        { name: 'כבד',  level:"בנוני", time: 40, type: "meats", picture:'45.jpg', password: '5', text: 'בתאבון'},
        { name: 'קציצות בשר',  level:"בנוני", time: 40, type: "meats", picture:'46.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוף עם ירקות',  level:"בנוני", time: 40, type: "meats", picture:'47.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוף באננס',  level:"קשה", time: 40, type: "meats", picture:'48.jpg', password: '4', text: 'בתאבון'},
        { name: 'שיפודים',  level:"קל", time: 40, type: "meats", picture:'49.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוף ותפוחי אדמה',  level:"קל", time: 40, type: "meats", picture:'50.jpg', password: '5', text: 'בתאבון'},
        { name: 'סטייק על האש',  level:"בנוני", time: 40, type: "meats", picture:'51.jpg', password: '5', text: 'בתאבון'},
        { name: 'עוף בתפוחי אדמה בטטה',  level:"בנוני", time: 40, type: "meats", picture:'52.jpg', password: '5', text: 'בתאבון'},
        { name: 'כבד עם תפודים',  level:"קשה", time: 40, type: "meats", picture:'53.jpg', password: '5', text: 'בתאבון'},
        { name: 'כנפיים בסילאן ודבש',  level:"בנוני", time: 40, type: "meats", picture:'54.jpg', password: '4', text: 'בתאבון'},
        { name: 'מוקפץ אורז',  level:"קשה", time: 40, type: "meats", picture:'55.jpg', password: '5', text: 'בתאבון'},
    ],
    Replies: [
        { idReply: '1w2', name: 'ffffff', reply: 'good' },
        { idReply: '1we2', name: 'fish', reply: 'Not tasty' },
    ],
    Levels:[{name:"כל הרמות"},{name:"קל"},{name:"בנוני"},{name:"קשה"}],
    Categories:[{name:"כל הקטגוריות"},{name:"parwe"},{name:"milky"},{name:"meats"}],
    CaurrentUser: { firstName: '', lastName: '', email: '', password: '' },
    Maneger:{email:'111@gmail.com',password:'111'},
    IngredientsToRecipes: [{ nameRecipe:'' , nameIngredient:''},],
    Ingredients: [
        { name:'sugar' },
        { name:'sult' },
        { name:'egg' },
        { name:'cocoa' },
        { name:'coffee' }
    ]
}
//reducer - לא מילה שמורה!
//produce - פונקציה מובנית
//מזהה את הפעולות שנשלחות לאויר ומפעילה אותן בפועל על הסטייט
//מקבלת שני ארגומנטים
//1. callback פונקציית 
//2. סטייט שעליו נפעיל את הפעולות
//הפונקציה הפנימית מקבלת שני ארגומנטים
//1. state - הסטייט שהתקבל בפונקציה החיצונית
//2. action - פעולה כלשהיא
//הפונקציה הפנימית תבדוק איזה פעולה נשלחה ותפעיל אותה על הסטייט
const reducer = produce((state, action) => {
    switch (action.type) {
        case 'ADD_USER': {
            return { ...state, maxId: state.maxId + 1, Users: [...state.Users, action.payload] }
        }
            break;
         case 'ADD_LEVEL': {
            return { ...state, maxId: state.maxId + 1, Levels: [...state.Levels, action.payload] }
        }
        case 'ADD_CATEGOREY': {
            return { ...state, maxId: state.maxId + 1, Categories: [...state.Categories, action.payload] }
        }
        case 'ADD_REPLAY': {
            return { ...state, maxId: state.maxId + 1, Replies: [...state.Replies, action.payload] }
        }
            break;
        case 'ADD_CURRENT_USER': {
            state.CaurrentUser = action.payload
        }
            break;
        case 'ADD_RECIPE': {
            return { ...state, maxId: state.maxId + 1, Recipes: [...state.Recipes, action.payload] }
        }
        case 'ADD_INGREDIANT_TO_RECIPE': {
            return { ...state, maxId: state.maxId + 1, IngredientsToRecipes: [...state.IngredientsToRecipes, action.payload] }
        }
        // case 'ADD_LEVEL':{
        //     return {...state, maxId:state.maxId +1, Levels:[...state.Levels,action.payload]}
        // } 
        //     break;
        default:
            break;
    }
}, initialState)
//יצירה של הסטייט הסופי כמחסן
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
j.txttamar
D:\הנדסאים\react\react-project\src
App.css.App {
  text-align: center;
}

.App-logo {
  height: 40vmin;
  pointer-events: none;
}

@media (prefers-reduced-motion: no-preference) {
  .App-logo {
    animation: App-logo-spin infinite 20s linear;
  }
}

.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.App-link {
  color: #61dafb;
}

@keyframes App-logo-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
D:\הנדסאים\react\react-project\src
index.cssbody {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

code {
  font-family: source-code-pro, Menlo, Monaco, constolas, 'Courier New',
    monospace;
}
D:\הנדסאים\react\react-project\src
style.css.nav {
    text-align: center;
    background-color: black;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link {
    text-align: center;
    justify-content: center;
    color: white;
    margin: 2rem;
    text-decoration: none;
}
.link:hover {
    color: chartreuse;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active {
    color: purple;
}D:\הנדסאים\react\react-project\src
style.css.nav{
    text-align: center;
    background-color: black;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link{
    color: white;
    margin: 2rem;
}
.link:hover{
    color: chartreuse;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active{
    color: crimson;
}D:\הנדסאים\react\react-project\src
StyleDetailes.css#detiles{
    text-align: center;
}D:\הנדסאים\react\react-project\src
StyleNav.css.nav {
    text-align: center;
    background-color:#EDE2D7;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link {
    color: white;
    margin: 2rem;
    text-decoration: none;
}
.link:hover {
    color:black;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active {
    color:black;
    font-size: larger;
}D:\הנדסאים\react\react-project\src
StyleRecipe.css.recipe{
     text-align: center;
     border: 1px solid black; 
      background-color: #EDE2D7; 
      padding: 40px; 
      margin: 7px;
     flex-basis:auto;
}
.all{
    width:100%;
    display: flex;
    flex:none;
    flex:wrap;
    flex-wrap: nowrap;
    flex-wrap: wrap-reverse;
    justify-content: space-between
}
#milky{
    border: 2px solid rgb(95, 121, 237);
    text-align: center;
}
#meats{
    border: 2px solid rgb(240, 130, 130);
    text-align: center;
}
#parwe{
    border: 2px solid rgb(120, 248, 120);
    text-align: center;
}
D:\הנדסאים\react\react-project\src
style.css.err {
    color: red;
    background-color: rgb(241, 157, 157);
}
.warn {
    color: rgb(12, 12, 12);
    background-color: yellow;
}
.info {
    color: blue;
    background-color: lightblue;
}
.msg {
    width: 100vw;
    height: 30px;
    font-size: 1.2rem;
}
.big {
    font-size: 5rem;
    color: hotpink;
}
.small {
    font-size: 1rem;
    color: orange;
}
img {
    width: 20rem;
    height: auto;
}
.bless {
    width: 30rem;
    height: auto;
    border: double black 0.2rem;
    margin: 2rem;
}
.male {
    background-color: lightblue;
    color: darkblue;
}
.female {
    background-color: pink;
    color: hotpink;
}D:\הנדסאים\react\react-project\src
style.css.nav{
    text-align: center;
    background-color: black;
    height: 3rem;
    width: 100vw;
    font-size: large;
    padding: 1rem 0;
    justify-content: center;
}
.link{
    color: blueviolet;
    margin: 2rem;
}
.link:hover{
    color: chartreuse;
}
/* class יצירת 
הפעיל link שריאקט תזהה אותו ותפעיל אותו עבור ה  */
.active{
    color: crimson;
}D:\הנדסאים\react\react-project\src
App.jsimport logo from './logo.svg';
import './App.css';
import { Main } from '../src/ReactProject/jsx.jsx/Main';
function App() {
  return (
    <div className="App">
      <Main></Main>
    </div>
  );
}

export default App;
D:\הנדסאים\react\react-project\src
App.test.jsimport { render, screen } from '@testing-library/react';
import App from './App';

test('renders learn react link', () => {
  render(<App />);
  const linkElement = screen.getByText(/learn react/i);
  expect(linkElement).toBeInTheDocument();
});
D:\הנדסאים\react\react-project\src
index.jsimport React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(constole.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();
D:\הנדסאים\react\react-project\src
reportWebVitals.jsconst reportWebVitals = onPerfEntry => {
  if (onPerfEntry && onPerfEntry instanceof Function) {
    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {
      getCLS(onPerfEntry);
      getFID(onPerfEntry);
      getFCP(onPerfEntry);
      getLCP(onPerfEntry);
      getTTFB(onPerfEntry);
    });
  }
};

export default reportWebVitals;
D:\הנדסאים\react\react-project\src
setupTests.js// jest-dom adds custom jest matchers for asserting on DOM nodes.
// allows you to do things like:
// expect(element).toHaveTextContent(/react/i)
// learn more: https://github.com/testing-library/jest-dom
import '@testing-library/jest-dom';
D:\הנדסאים\react\react-project\src
api.jsimport axios from "axios"
const getTodoList = async () => {
    try {
        return await axios.get('https://jsonplaceholder.typicode.com/todos')
    }
    catch {
        throw Error('could not get the data from the resource')
    }
}
const getTodoList1 = async () => {
    fetch('https://jsonplaceholder.typicode.com/todos')
        .then(res => {
            if (!res.ok) {
                throw Error('could not fetch the data from the resource')
            }
            return res.json()
        })
        .then(data => {
            setList(data)
            setError(null)
        })
        .catch(err => {
            setList(null)
            setError(err.message)
        })
}
fetch('URL_GOES_HERE', { 
    method: 'post', 
    headers: new Headers({
        'Authorization': 'Bearer '+ ,
        'Content-Type': 'application/x-www-form-urlencoded'
    }), 
    body: 'A=1&B=2'
});D:\הנדסאים\react\react-project\src
useFetch.jsimport { useEffect, useState } from "react"
export const useFetch = (url) => {
    const [data, setData] = useState()
    const [error, setError] = useState()
    useEffect(() => {
        fetch(url)
            .then(res => {
                if (!res.ok) {
                    throw Error('could not fetch the data from the resource')
                }
                return res.json()
            })
            .then(data => {
                setData(data)
                setError(null)
            })
            .catch(err => {
                setData(null)
                setError(err.message)
            })
    }, [url])
    return { data, error }
}D:\הנדסאים\react\react-project\src
useSizeScreen.jsimport { useEffect, useState } from "react";
export const useSizeScreen = () => {
    const [isSmall, setIsSmall] = useState(window.innerWidth < 600)
    useEffect(() => {
        window.addEventListener('resize', setIsSmall(window.innerWidth < 600))
    })
    return isSmall;
}D:\הנדסאים\react\react-project\src
Action.js//פונקציות עריכה
export const setProduct = (newProduct) => {
    return { type: 'SET_PRODUCT', payload: newProduct }
}
export const addProduct = (product) => {
    return { type: 'ADD_PRODUCT', payload: product }
}D:\הנדסאים\react\react-project\src
Action.jsexport const addUser = (user) => {
    return { type: 'ADD_USER', payload: user }
}
export const updateUser = ({ id, user }) => {
    return { type: 'UPDATE_USER', payload: { id, user } }
}
export const setCurrentUser = (user) => {
    return { type: 'SET_CURRENT', payload: user }
}D:\הנדסאים\react\react-project\src
Store.jsimport { createStore } from "redux";
//immer - ספריה הממירה אובייקטים מסוג שלא ניתן לשינוי לסוג שניתן לשינוי
//immutable - לא ניתן לשינוי
//mutable - ניתן לשינוי
import { produce } from "immer";
//שם מקובל לאובייקט שיכיל את כל הנתונים
//בגישה לשרת נכתוב בסטייט רק את האובייקטים שיכילו את הנתנים
const initialState = {
    currentUser: {},
    users: [
        { id: 1, firstName: "ester", lastName: "pilot", eMail: "est13@gmail.com", cell: "0527678899", password: "e1112333" },
        { id: 2, firstName: "tova", lastName: "bienstock", eMail: "tova@gmail.com", cell: "0556775522", password: "t09877899" },
        { id: 3, firstName: "chavi", lastName: "konak", eMail: "ck@gmail.com", cell: "0533145655", password: "c44556677" },
        { id: 4, firstName: "yehudis", lastName: "walitsky", eMail: "yw@gmail.com", cell: "0548426632", password: "y67859403" },
        { id: 5, firstName: "blimi", lastName: "yusba", eMail: "blimi2@gmail.com", cell: "0523147896", password: "b77788889" },
        { id: 6, firstName: "rivky", lastName: "grossman", eMail: "randd@gmail.com", cell: "0551236987", password: "r46557786" },
        { id: 7, firstName: "dini", lastName: "sternberg", eMail: "8844@gmail.com", cell: "0542483663", password: "d13675467" }
    ],
    // maxId: users[users.length - 1].id
    maxId: 7
}
//שם מקובל לאובייקט
//מתאם בין הסטייט לפעולות
//אחראי לבצע עדכונים על הסטייט
//מקבל שני ארגומנטים
//1. פונקציה שמקבלת סטייט ואקשן ואחראית על התאום
//2. הסטייט שלי שיכנס לפונקציה האנונימית כסטייט
const reducer = produce((state, action) => {
    switch (action.type) {
        case 'ADD_USER': {
            return { ...state, maxId: state.maxId + 1, users: [...state.users, action.payload] }
        }
            break;
        case 'UPDATE_USER': {
            let i = state.users.findIndex(u => u.id === action.payload.id)
            state.users[i] = action.payload.user
            // state.users[action.payload.id - 1] = action.payload.user
        }
            break;
        case 'SET_CURRENT': {
            state.currentUser = action.payload
        }
            break;
        default:
            break;
    }
}, initialState)
//יצירה של הסטייט הסופי כמחסן
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
ProductAction.jsexport const addProduct = (product) => {
    return { type: 'ADD_PRODUCT', payload: product }
}
export const updateProduct = ({ id, product }) => {
    return { type: 'UPDATE_PRODUCT', payload: { id, product } }
}
export const setCurrentProduct = (product) => {
    return { type: 'SET_CURRENT', payload: product }
}
export const removeProduct = index => {
    return { type: 'DELETE_PRODUCT', payload: index }
}D:\הנדסאים\react\react-project\src
ProductReducer.js//immer - ספריה הממירה אובייקטים מסוג שלא ניתן לשינוי לסוג שניתן לשינוי
//immutable - לא ניתן לשינוי
//mutable - ניתן לשינוי
import { produce } from "immer";
//שם מקובל לאובייקט שיכיל את כל הנתונים
//בגישה לשרת נכתוב בסטייט רק את האובייקטים שיכילו את הנתנים
const productState = {
    currentProduct: {},
    products: [],
    // maxId: users[users.length - 1].id
    maxId: 7
}
//שם מקובל לאובייקט
//מתאם בין הסטייט לפעולות
//אחראי לבצע עדכונים על הסטייט
//מקבל שני ארגומנטים
//1. פונקציה שמקבלת סטייט ואקשן ואחראית על התאום
//2. הסטייט שלי שיכנס לפונקציה האנונימית כסטייט
const productReducer = produce((state, action) => {
    switch (action.type) {
        // case 'ADD_USER': {
        //     // state.maxId = state.maxId + 1
        //     return { ...state, users: [...state.users, action.payload], maxId: state.maxId + 1 }
        // }
        //     break;
        // case 'UPDATE_USER': {
        //     let i = state.users.findIndex(u => u.id === action.payload.id)
        //     state.users[i] = action.payload.user
        //     // state.users[action.payload.id - 1] = action.payload.user
        // }
        //     break;
        // case 'SET_CURRENT': {
        //     state.currentUser = action.payload
        // }
        //     break;
        // case 'DELETE_USER': {
        //     return { ...state, users: [state.users.splice(action.payload, 1)] }
        // }
        //     break;
        default:
            break;
    }
}, productState)
export default productReducer;D:\הנדסאים\react\react-project\src
Store.jsimport { combineReducers, createStore } from "redux";
import userReducer from './UserReducer';
import productReducer from './ProductReducer';
//איחוד reducers
const reducer = combineReducers({
    userReducer,
    productReducer
})
//יצירה של הסטייט הסופי כמחסן
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
UserAction.jsexport const addUser = (user) => {
    return { type: 'ADD_USER', payload: user }
}
export const updateUser = ({ id, user }) => {
    return { type: 'UPDATE_USER', payload: { id, user } }
}
export const setCurrentUser = (user) => {
    return { type: 'SET_CURRENT', payload: user }
}
export const removeUser = index => {
    return { type: 'DELETE_USER', payload: index }
}D:\הנדסאים\react\react-project\src
UserReducer.js//immer - ספריה הממירה אובייקטים מסוג שלא ניתן לשינוי לסוג שניתן לשינוי
//immutable - לא ניתן לשינוי
//mutable - ניתן לשינוי
import { produce } from "immer";
//שם מקובל לאובייקט שיכיל את כל הנתונים
//בגישה לשרת נכתוב בסטייט רק את האובייקטים שיכילו את הנתנים
const userState = {
    currentUser: {},
    users: [
        { id: 1, firstName: "ester", lastName: "pilot", eMail: "est13@gmail.com", cell: "0527678899", password: "e1112333" },
        { id: 2, firstName: "tova", lastName: "bienstock", eMail: "tova@gmail.com", cell: "0556775522", password: "t09877899" },
        { id: 3, firstName: "chavi", lastName: "konak", eMail: "ck@gmail.com", cell: "0533145655", password: "c44556677" },
        { id: 4, firstName: "yehudis", lastName: "walitsky", eMail: "yw@gmail.com", cell: "0548426632", password: "y67859403" },
        { id: 5, firstName: "blimi", lastName: "yusba", eMail: "blimi2@gmail.com", cell: "0523147896", password: "b77788889" },
        { id: 6, firstName: "rivky", lastName: "grossman", eMail: "randd@gmail.com", cell: "0551236987", password: "r46557786" },
        { id: 7, firstName: "dini", lastName: "sternberg", eMail: "8844@gmail.com", cell: "0542483663", password: "d13675467" }
    ],
    // maxId: users[users.length - 1].id
    maxId: 7
}
//שם מקובל לאובייקט
//מתאם בין הסטייט לפעולות
//אחראי לבצע עדכונים על הסטייט
//מקבל שני ארגומנטים
//1. פונקציה שמקבלת סטייט ואקשן ואחראית על התאום
//2. הסטייט שלי שיכנס לפונקציה האנונימית כסטייט
const userReducer = produce((state, action) => {
    switch (action.type) {
        case 'ADD_USER': {
            // state.maxId = state.maxId + 1
            return { ...state, users: [...state.users, action.payload], maxId: state.maxId + 1 }
        }
        case 'UPDATE_USER': {
            let i = state.users.findIndex(u => u.id === action.payload.id)
            state.users[i] = action.payload.user
            // state.users[action.payload.id - 1] = action.payload.user
        }
            break;
        case 'SET_CURRENT': {
            state.currentUser = action.payload
        }
            break;
        case 'DELETE_USER': {
            return { ...state, users: [state.users.splice(action.payload, 1)] }
        }
        default:
            break;
    }
}, userState)
export default userReducer;D:\הנדסאים\react\react-project\src
list.jsximport { Student } from "./Student"
export const List = props => {
    const { list } = props
    return <>
        {list.map((item, index) => <Student name={item.name} age={item.age} grade={item.grade}></Student>)}
    </>
}D:\הנדסאים\react\react-project\src
main.jsximport { List } from "./list"
export const Main = () => {
    const student = [{ name: 'sara', age: 12, grade: 87 }, { name: 'dina', age: 15, grade: 84 }]
    return <>
        <List list={student}></List>
    </>
}D:\הנדסאים\react\react-project\src
Student.jsxexport const Student = (props) => {
    const { name, age, grade } = props
    function Age_Grade() {
        if (age >= 12 && grade >= 85)
            return true
        return false
    }
    return <>
        <p>{name}</p>
        {Age_Grade() ?
            <h1>you can go to trip</h1>
            :
            <h1>you cant go to trip</h1>
        }
    </>
}
D:\הנדסאים\react\react-project\src
Details.jsximport { useDispatch } from 'react-redux'
import { addProduct } from '../lesson6/redux/Action'
import {useNavigate, useParams} from 'react-router-dom'
import { useRef, useState } from "react"
import swal from 'sweetalert'
export const Details = () => {
//    let p = useParams()
debugger
   const dispatch=useDispatch()
   const nameRef = useRef()
   const costRef = useRef()
   let nav=useNavigate()
   const send = (event)=>{
    event.preventDefault()
    const user={
        name: nameRef.current.value,
        price: costRef.current.value,
    }
    swal(`change successfully ${user.name}!`);
    //  ניתוב מתוך קומפוננטה לניתוב כלךשהו שהוגדר בדף הראוטינג
     nav(`/Wellcome/${user.name}/${user.price}`)
     dispatch(addProduct(user))
    }
    return <>
        {/* <div>
              <p>name: {p.name}<input  placeholder='to change'className='k' type="text" style={{width:65}}></input></p> 
            <p>price: {p.price}<input  placeholder='to change'className='k' type="text" style={{width:65}}></input></p> 
        </div>
        <button onClick={(e) => send(e)}>send</button>
        <br></br> */}
        <h3>produce:</h3>
        <label htmlFor={'name'}>name:</label><br></br>
        <input id={'name'} placeholder={"kk"} ref={nameRef}></input>
        <br></br>
        <label htmlFor={'cost'}>price:</label><br></br>
        <input id={'cost'} placeholder={"kk"} ref={costRef}></input>
        <br></br>
        {/* <label htmlFor={'kod'}>kod: ref={kodRef}</label><br></br>
        <input id={'kod'} placeholder={p.kod} ref={kodRef}></input> */}
    <button onClick={(e) => send(e)}>send</button>
        <br></br>
    </>
}
export default Details;
D:\הנדסאים\react\react-project\src
Home.jsxexport const Home = () => {
    return <>
        <h1>Home</h1>
    </>
}D:\הנדסאים\react\react-project\src
main.jsximport { Nav } from "./Nav"
import { Routing } from "./Routing"
import { BrowserRouter} from "react-router-dom"
import { Provider, useSelector } from 'react-redux'
import store from "./redux/stor"
export const Main = () => {
    return <>
     <Provider store={store}>
        <BrowserRouter>
            <Nav></Nav>
            <Routing></Routing>
        </BrowserRouter>
    </Provider>
    </>
}
D:\הנדסאים\react\react-project\src
Nav.jsximport './style.css'
import { Link, NavLink } from 'react-router-dom'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            <NavLink to='Home' className={'link'}>Home</NavLink>
            {/* <NavLink to='DitailsIn' className={'link'}>DitailsIn</NavLink> */}
            <NavLink to='proudect' className={'link'}>proudect</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
proudect.jsximport { useRef, useState } from 'react'
import { useNavigate, Outlet } from 'react-router-dom'
import{Details } from './Details'
import swal from 'sweetalert'
import { useSelector } from 'react-redux'
export const Proudect = () => {
    const list = useSelector(x=> x.products)
    // יצירת משתנה שאחראי על ניתוב מתוך קומפוננטה
    let nav = useNavigate()
// const [newProudect, setNewProudect] = useState({})
    // const navigate = useNavigate()
    const show = (item,c) => {
        // ניתוב מתוך קומפוננטה לניתוב כלךשהו שהוגדר בדף הראוטינג
    nav(`/update/${item.name}/${item.price}/${c}`)
    }
    const show1 = () => {
        debugger
        nav(`/Details`)
    }
    return <>
         <h1>Products:</h1><br></br>
        <table border={6} className={'table'}>
            <tr>
                <th className="colorY">Name:</th>
                <th>Price:</th>
            </tr>
            { list && list.map((item,index) => 
            <tr key={index}>
                 <td ><button onClick={() => show(item,index)}>{item.name}</button> </td>
                 <td key={index}>{item.price}</td>
            </tr>)}
        </table>
        <button onClick={()=> show1()}>הוספה</button> 
         <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
Routing.jsximport { Route, Routes } from 'react-router-dom'
import { Home } from './Home'
import { Proudect } from './proudect'
import { Details } from './Details'
import { Update } from './update'
import { Wellcome } from './Wellcome'
export const Routing = () => {
    return <>
        <Routes>
            <Route path={'/'} element={<Home></Home>}></Route>
            <Route path={'Home'} element={<Home></Home>}></Route>
            <Route path={'Proudect'} element={<Proudect></Proudect>}></Route>
            <Route path={'Wellcome/:name/:price'} element={<Wellcome></Wellcome>}></Route>
            <Route path={'Details'} element={<Details></Details>}></Route>
            <Route path={'update/:name/:price/:c'} element={<Update></Update>}></Route>
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
update.jsximport { useNavigate, useParams } from "react-router-dom"
import { setProduct } from "./redux/Action"
import swal from 'sweetalert'
import { useRef } from "react"
import { useDispatch } from 'react-redux'
export const Update =() => {
     let params = useParams()
    const dispatch=useDispatch()
 let i=params.c
    const nameRef = useRef()
    const costRef = useRef()
    let nav=useNavigate()
    const send = ()=>{
     const pp={user:{
         name: nameRef.current.value,
         price: costRef.current.value,
         kod: params.kod},
         index:i
     }
     // ניתוב מתוך קומפוננטה לניתוב כלךשהו שהוגדר בדף הראוטינג
      nav(`/Wellcome/${pp.user.name}/${pp.user.price}`)
     dispatch(setProduct(pp))
     swal(`change successfully ${pp.user.name}!`);
    }
    return<>
 <h3>produce:</h3>
        <label  htmlFor={'name'} >name:</label><br></br>
        <input id={'name'} ></br>
        <label  htmlFor={'cost'}>price:</label><br></br>
        <inpuref={nameRef} placeholder={params.name} ></input>
        <brt id={'cost'} ref={costRef} placeholder={params.price}></input>
        <br></br>
        <button onClick={() => send()}>send</button>
        <br></br>
    </>
}
export default Update;D:\הנדסאים\react\react-project\src
Wellcome.jsximport { useParams } from "react-router-dom"
export const Wellcome = () => {
    let p=useParams()
    return <>
    <h1>jh</h1>
        <h1>name: {p.name} price: {p.price}</h1>
    </>
}D:\הנדסאים\react\react-project\src
blesCard.jsxexport const Blessing = (props) => {
    const { sender:name1, addressee:name2, kind:sex, whish:w, text:t, typeCard } = props
    function head() {
        if(sex == 'n')
        return 'היקרה'   
        return 'היקר'
    }
return <>
        <div className="card">
            { 
                (typeCard== 'have a good year') ?
                    <div style={{ backgroundColor: 'red', fontSize: '3rem', margin: '5rem'  }}>
                        <p>{head()} {name2}<br></br> {w}<br></br>{t}<br></br>{name1}</p>
                    </div>
                    :
                    (w == 'mazal tov') ?
                    <div style={{ backgroundColor: '#64dafb', fontSize: '3rem', margin: '5rem' }}>
                        <p>{head()} {name2}<br></br>{w}<br></br>{t}<br></br>{name1}</p>
                    </div>
                    :
                    (w =='happey birthday to you') ?
                    <div style={{backgroundColor:'pink',fontSize:'3rem',margin:'5rem'}}>
                        <p>{head()} {name2}<br></br>{w}<br></br>{t}<br></br>{name1}</p>
                        </div>
                   :    
                    (w=='moadim lsimcha')?
                        <div style={{backgroundColor:'blue',fontSize:'3rem',margin:'5rem'}}>
                            <p>{head()} {name2}<br></br>{w}<br></br>{t}<br></br>{name1}</p>
                            </div>
                   :
                   ""
            }
        </div>
    </>
}
D:\הנדסאים\react\react-project\src
List.jsximport { Blessing } from "./blesCard"
import { SelectApp } from "./SelectApp"
export const List = props=>{
    const {list} = props
    return<>
    {list.map((item,index)=><Blessing sender={item.sender} addressee={item.addressee} kind={item.kind} whish={item.whish} text={item.text} typeCard={item.typeCard}></Blessing>)}
    </>
}D:\הנדסאים\react\react-project\src
main.jsximport { Blessing } from "./blesCard"
import { List } from "./List"
import { SelectApp } from "./SelectApp"
export const Main = () => {
    const blesCard = [{ sender: "dina", addressee: "sara", kind: "n", whish: "have a good year", text: "", typeCard: "goodYear" },
                      { sender: "sara", addressee: "riki", kind: "n", whish: "mazal tov", text: "", typeCard: "newBorn" },
                      { sender: "tzvi", addressee: "dani", kind: "z", whish: "happey birthday to you", text: "", typeCard: "birthday" },
                      { sender: "chaim", addressee: "dani", kind: "z", whish: "moadim lsimcha", text: "", typeCard: "cagim" }]
    return <>
<Blessing></Blessing> 
         {<List list={blesCard}> </List>  }
        <SelectApp></SelectApp>
    </>
}D:\הנדסאים\react\react-project\src
SelectApp.jsximport { useState } from "react";
import { Blessing } from "./blesCard";
export const SelectApp = props => {
    const{SelectApp}=props
    const type = ["have a good year", "mazal tov", "happey birthday to you", "moadim lsimcha"];
    const min = ['n', 'z'];
    const [name1, setSender] = useState('')
    const [name2, setAdressee] = useState('')
    const [t, setText1] = useState('')
    const [w, setWish] = useState()
    const [typeCard, setText2] = useState('')
    const [sex, setSex] = useState('')
    return <>
    <h1>greeting Card - fill the details: </h1><br></br>
    <label>Input who well get your latter:</label>
        <input onBlur={(e) => { setSender(e.target.value) }}></input><br></br>
        {constole.log(name2)}
        <label>Input the name of the sender: </label>
        <input onBlur={(e) => { setAdressee(e.target.value) }}></input><br></br>
        { constole.log(name1)}
        <label>Choose the sex of the getter: </label>
        <select id="selcetSex" onChange={(e) => setSex(e.target.value)}>
            {min.map((c, index) => <option key={index} value={c}>{c}</option>)}
        </select><br></br>
        <label>Choose the goal of the holyday: </label>
        <select  id="selcetGoal" onChange={(e) => setWish(e.target.value)}>
            {type.map((c, index) => <option key={index} value={c}>{c}</option>)}
        </select><br></br>
         <label>What do you want to wish for her?</label><br></br>
        <textarea className="txt" onBlur={(e) => { setText1(e.target.value) }}></textarea><br></br>
        <label>If you want to say more thing:</label><br></br>
        <textarea className="txt" onBlur={(e) => { setText2(e.target.value) }}></textarea><br></br> 
           {name1 != '' && name2 != '' && w != '' &&  <Blessing  type={typeCard}  sender={name1} addressee={name2} kind= {sex} whish={w} text={t}></Blessing>} 
    </>
}D:\הנדסאים\react\react-project\src
connect.jsximport React from "react";
export const Connect = () => {
    return <>
    <h1>sdftghjjkl</h1>
    </>
}D:\הנדסאים\react\react-project\src
img.jsximport React from "react";
import img1 from "../hw6/imgs/B_Afghanistan"
export const Img = () => {
    return <>
    <div img={img1}></div>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import React from "react";
import { BrowserRouter } from "react-router-dom";
import { Nav } from "./Nav";
import { Routing } from "./routing";
import { Img } from "./img";
import { Connect } from "./connect";
import { Product } from "./product";
export const Main = () => {
    return <>
        {/* קומפוננטה שמנהלת את כל הניתובים */}
        <BrowserRouter>
            {/* nav טוענת את ה */}
            <Nav></Nav>
            {/* טוענת את כל הצהרות הניתובים */}
            <Routing></Routing>
        </BrowserRouter>
        {/* <BrowserRouter>
            <Nav></Nav>
            <Routes>
                <Route path='login' element={<Login />}></Route>
                <Route path='tick' element={<Tick />}></Route>
            </Routes>
        </BrowserRouter> */}
    </>
}D:\הנדסאים\react\react-project\src
Nav.jsximport React from "react";
import { Link, NavLink } from "react-router-dom";
import './style.css'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            <NavLink to='product' className={'link'}>product</NavLink>
            <NavLink to='img' className={'link'}>img</NavLink>
            <NavLink to='connect' className={'link'}>connect</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
product.jsximport React from "react";
export const Product = () => {
    return <>
    <h1>sdklgvjhfd</h1>
    </>
}D:\הנדסאים\react\react-project\src
routing.jsximport React from "react";
import { Route, Routes } from "react-router";
import { PageNotFound } from "./PageNotFound";
import { Img } from "./img";
import { Connect } from "./connect";
import { Product } from "./product";
export const Routing = () => {
    return <>
        <Routes>
            <Route path='/' element={<Product />}></Route>
            <Route path='product' element={<productA />}></Route>
            <Route path='img' element={<Img />}></Route>
            <Route path='connect' element={<Connect />}></Route>
            {/* <Route element={<PageNotFound />}></Route> */}
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
Fruit.jsximport React from "react";
const Fruit = () => {
    const fruit = ["Apple", "Peach", "Orange", "Banana", "Pear"]
    return (
        <>
            <ul>
                {fruit.map(item =>
                    <li>{item}</li>
                )}
            </ul>
        </>
    )
}
export default Fruit;D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import Fruit from "./Fruit";
import { Person } from "./Person";
export const Main = () => {
    return <>
        <Person name={"Avital"} age={12}></Person>
        <Person name={"Efrat"} age={25}></Person>
        <Person name={"Leah"} age={3}></Person>
        <Person></Person>
        <Person age={45}></Person>
        <Fruit></Fruit>
    </>
}D:\הנדסאים\react\react-project\src
Person.jsximport React from "react";
export const Person = (props) => {
    // props={name:"Avital", age:12}
    //שליפת המאפיינים מתוך הפרופס לתוך משתנים שנקראים באותם שמות
    const { name, age } = props;
    //קומפוננטה מחזירה אובייקא אקסמלי
    return <>
        <h3>name: {name}</h3>
        <h3>age: {age}</h3>
        {age >= 9 && <h1>יכול לחצות את הכביש לבד 👍👍👍👍</h1>}
        {/* //1 תגית מתחילות באותיות קטנות */}
        {/* <h1>hello</h1> */}
        {/* //2 תגיות באותיות גדולות הן קומפוממטה */}
        {/* <Person></Person> */}
        {/* //3 react ל import חובה להוסיף    */}
        {/* //4  חייב להיות עטוף באלמנט אחד  jsx קוד*/}
        {/* <> */}
        {/* <h1>atra</h1>
            <h2>react</h2> */}
        {/* </> */}
        {/* {
            <div>
                <h1>atra</h1>
                <h2>react</h2>
                </div>
        } */}
        {/* //5 JS אין שימוש במילים שמורות של  */}
        {/* camelCase הופכים להיות attributes  */}
        {/* <p class="p"></p >=>
            <p className="p"></p> */}
        {/* //camelCase הופכים ל style */}
        {/* <p style={{ font-size: "11px" }}>hello</p> */}
        {/* <p style={{ fontSize: "11px" }}>hello</p> */}
        {/* background-color => backgroundColor */}
        {/* //camelCase  הופכים ל event */}
        {/* <button onclick={doSomething}></button> */}
        {/* <button onClick={doSomething}></button> */}
        {/* //6חייב להיות בתוך js קוד  {} */}
        {/* <p> x+y={x + y}</p>
        <p>x+y={addNumbers()}</p>
        {/* אפשר לשתול אלמנטים בתוך הקוד וקוד בתוך אלמטים */}
        {/* {x > 3 ? <p>yes</p> : <p>no</p>}
        <div className={name}>className={name}</div>
        <ul>
            {
                arry.map(item => <li key={item}>{item}</li>)
            }
        </ul> */}
    </>
}
//ערכי ברירת מחדל למאפיינים של הקומפוננטה
//במקרה ולא ישלחו לי את אחד / כל המאפיינים ריאקט תקח את המאפיינים הדיפולטיביים
Person.defaultProps = {
    name: "Unknown",
    age: 0
}
// export const Div = () => {
//     return <>
//         <p>p1</p>
//         <p>p2</p>
//         <div>Hello EveryBody!</div>
//     </>
// }
D:\הנדסאים\react\react-project\src
Home.jsximport { useFetch } from "./useFetch"
export const Home = () => {
    const { data: list, error } = useFetch('https://jsonplaceholder.typicode.com/todos')
    return <>
        {error && <p>{error}</p>}
        {list && list.map((item, index) => <p key={index}>{item.title}</p>)}
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport { Home } from "./Home"
import { ArrBySizeScreen, ShowSizeScreen } from "./SizeScreen"
export const Main = () => {
    return <>
        {/* <ShowSizeScreen></ShowSizeScreen>
        <ArrBySizeScreen></ArrBySizeScreen> */}
        <Home></Home>
    </>
}D:\הנדסאים\react\react-project\src
SizeScreen.jsximport { useEffect, useState } from "react"
import { useSizeScreen } from "./useSizeScreen"
export const ShowSizeScreen = () => {
    const isSmall = useSizeScreen()
    return <>
        {isSmall && <p>Small Screen</p>}
        {!isSmall && <p>Big Screen</p>}
    </>
}
export const ArrBySizeScreen = () => {
    const isSmall = useSizeScreen()
    const arr = ['aaa', 'bbb', 'ccc', 'ddd', 'eee', 'fff', 'ggg']
    return <>
        {isSmall &&
            <div>
                <p>{arr[0]}</p>
                <p>{arr[1]}</p>
            </div>
        }
        {!isSmall &&
            arr.map((item, index) => <p key={index}>{item}</p>)
        }
    </>
}D:\הנדסאים\react\react-project\src
Counter.jsximport React from "react";
import { useState } from "react";
export const Counter = () => {
    // let counter = 0;
    // let plus = 1;
    //הגדרת משנה בסטייט של ריאקט
    //שם המשתנה, שם הפונקציה שתטפל בעדכון ערך המשתנה
    //בסוגריים העגולות נציב ערך התחלתי
    const [counter, setCounter] = useState(0)
    const [plus, setPlus] = useState(1)
    const changePlus = (e) => {
        setPlus(plus => Number(e.target.value))
        // plus = Number(e.target.value);
    }
    const addToCounter = () => {
        setCounter(counter => counter + plus)
        // counter += plus;
    }
    return <>
        <h1>{counter}</h1>
        <button onClick={addToCounter}>add</button>
        <p>jump in {plus}</p>
        <input placeholder="set plus" onChange={changePlus}></input>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Counter } from "./Counter";
import { SelectMain } from "./CountryCity/SelectMain";
export const Main = () => {
    return <>
        {/* <Counter></Counter> */}
        <SelectMain></SelectMain>
    </>
}D:\הנדסאים\react\react-project\src
List.jsximport React, { useEffect, useRef, useState } from "react";
const list = [
    { username: 'Avigail', password: 111 },
    { username: 'Yael', password: 222 },
    { username: 'Efrat', password: 333 },
    { username: 'Miriam', password: 444 },
    { username: 'Yehudit', password: 555 },
    { username: 'Chagit', password: 666 }
]
export const Login = () => {
    const [pw, setPw] = useState()
    const login = () => {
        const user = list.filter(user => user.password == pw)[0]
        if (user)
            document.title = user.username
        else
            document.title = 'unknown'
    }
    //מקבלת שני ארגומנטים
    //פונקציה להפעלה
    //ומערך
    //מופעלת בעת טעינה
    //ו/או בעת שינוי של משתנה/י סטייט
    //אם המערך ריק - רק בעת טעינה
    //אם המערך מלא - גם בעת שינוי של כל אחד מהמשתנים שכתובים בו
    //הפונקציה הפנימית יכולה להחזיר פונקציה
    //שתקרה בעת סגירת הקומפוננטה
    // useEffect(function () {
    //     alert('Im here')
    //     return () => {
    //         alert('Im finished')
    //     }
    // }, [])
    useEffect(() => {
        login()
        return () => { document.title = 'React App' }
    }, [pw])
    // login()
    return <>
        <input type={'password'} onBlur={(e) => setPw(e.target.value)}></input>
        {/* <button onClick={login}>login</button> */}
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React, { useState } from "react";
import { Login } from "./List";
import { Tick } from "./Tick";
export const Main = () => {
    const [show, setShow] = useState(true)
    return <>
        <button onClick={() => setShow(show => !show)}>show/hide</button>
        {/* <Tick></Tick> */}
        {show && <Login></Login>}
    </>
}D:\הנדסאים\react\react-project\src
Tick.jsximport React, { useEffect, useState } from "react";
export const Tick = () => {
    const [tick, setTick] = useState(0)
    //פונקציה בעת טעינת קומפוננטה
    useEffect(() => {
        //פונקציה שקורית כל פרק זמן קבוע
        //הפונקציה מקבלת שני ארגומנטים
        //1. פונקציית callback - מה יקרה
        //2. פרק זמן 1000- שניה, 5000 - 5 שניות וכן הלאה
        const timer = setInterval(() => {
            setTick(v => v + 1)
        }, 5000)
        return () => {
            clearInterval(timer)
        }
    }, [])
    return <>
        <h1>{tick}</h1>
    </>
}D:\הנדסאים\react\react-project\src
details.jsximport React from "react";
import { useParams } from "react-router";
export const Details = () => {
    //שליפת המשתנים שקבלנו כפרמטר
    const name = useParams().name
    return <>
        {/* הצגת שם המשתמש */}
        <h1>Hello {name}!</h1>
    </>
}D:\הנדסאים\react\react-project\src
login.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Login = () => {
    const nameRef = useRef()
    const pwRef = useRef()
    const navigate = useNavigate()
    const login = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        //הפונקציה שולפת את פרטי המשתמש מה loocalstorage
        //ובודקת האם הנתונים שהוכנסו זהים
        const user = localStorage.getItem('username')
        const pw = localStorage.getItem('password')
        if (nameRef.current.value === user && pwRef.current.value === pw) {
            //אם כן נבצע ניתוב ונשלח את השם כפרמטר
            navigate(`/details/${nameRef.current.value}`)
        }
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={login}>login</button>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { BrowserRouter } from "react-router-dom";
import { Nav } from "./Nav";
import { Routing } from "./Routing";
export const Main = () => {
    return <>
        {/* קומפוננטה שמנהלת את כל הניתובים */}
        <BrowserRouter>
            {/* nav טוענת את ה */}
            <Nav></Nav>
            {/* טוענת את כל הצהרות הניתובים */}
            <Routing></Routing>
        </BrowserRouter>
        {/* <BrowserRouter>
            <Nav></Nav>
            <Routes>
                <Route path='login' element={<Login />}></Route>
                <Route path='tick' element={<Tick />}></Route>
            </Routes>
        </BrowserRouter> */}
    </>
}D:\הנדסאים\react\react-project\src
Nav.jsximport React from "react";
import { Link, NavLink } from "react-router-dom";
import './style.css'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            {/* a- נגשת לשרת עבור שליפה של כל מחדש */}
            {/* <a></a> */}
            {/* קומפוננטה של ריאקט - link */}
            {/* link - טוען את היישום מקומית וניגש לשם לשלוף את הקומפוננטה הרצויה */}
            {/* <Link to='login' className={'link'}>Login</Link>
            <Link to='tick' className={'link'}>Tick</Link> */}
            {/* NavLink - active מזהה את הניתוב העכשוי ונותן לו את העיצוב של*/}
            <NavLink to='login' className={'link'}>Login</NavLink>
            <NavLink to='register' className={'link'}>Register</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
PageNotFound.jsximport React, { useEffect } from "react";
export const PageNotFound = () => {
    useEffect(() => {
        document.title = 'page not found'
    })
    return <>
        <h1>Page Not Found!</h1>
    </>
}D:\הנדסאים\react\react-project\src
register.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Register = () => {
    // שימוש במשתנה מצביע ע"מ שנוכל לשלוף נתונים מתוך הפקד
    const nameRef = useRef()
    const pwRef = useRef()
    // הגדרת משתנה מסוג navigate
    const navigate = useNavigate()
    //פונקציה ששומרת את נתוני המשתמש ב localstorage
    const register = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        localStorage.setItem('username', nameRef.current.value)
        localStorage.setItem('password', pwRef.current.value)
        //אם כן ננתב מתוך הפונקציה ונשלח כפרמטר את שם המשתמש
        navigate(`/details/${nameRef.current.value}`)
        // navigate('/details/'+nameRef.current.value)
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={register}>register</button>
    </>
}D:\הנדסאים\react\react-project\src
Routing.jsximport React from "react";
import { Route, Routes } from "react-router";
import { Login } from "../lesson6/login";
import { Tick } from "../lesson5/Tick";
import { PageNotFound } from "./PageNotFound";
import { Register } from "./register";
import { Details } from "./details";
export const Routing = () => {
    return <>
        {/* הצהרה על הניתובים */}
        <Routes>
            {/* עבור ניתוב ספציפי איזו קומפוננטה תטען */}
            <Route path='/' element={<Login />}></Route>
            <Route path='login' element={<Login />}></Route>
            <Route path='register' element={<Register />}></Route>
            <Route path='details/:name' element={<Details />}></Route>
            {/* <Route element={<PageNotFound />}></Route> */}
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Provider } from "react-redux";
import store from "./redux/Store";
import { SignUp } from "./SignUp";
import { Users } from "./Users";
export const Main = () => {
    return <>
        {/* טעינת קומפוננטה מריאקט רידקס */}
        {/* הפרוביידר מקבל כפרופס את המחסן */}
        {/* כל קומפוננטה שתטען בתוך הפרוביידר תכיר את המחסן */}
        <Provider store={store}>
            <Users></Users>
            <SignUp></SignUp>
        </Provider>
    </>
}D:\הנדסאים\react\react-project\src
PersonalArea.jsximport React, { useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { updateUser } from "./redux/Action";
export const PersonalArea = (props) => {
    const dispatch = useDispatch()
    const currentUser = useSelector(store => {
        return store.currentUser
    })
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    const send = () => {
        constole.log(currentUser);
        const user = {
            id: currentUser.id,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        //כלל של אובייקט json
        //אם המפתח והערך בעלי אותו שם מספיק לכתוב רק פעם אחת
        // { user:user } = { user }
        dispatch(updateUser({ id: currentUser.id, user }))
        props.close()
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>save changes</button>
    </>
}D:\הנדסאים\react\react-project\src
SignUp.jsximport React, { useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { addUser } from "./redux/Action";
export const SignUp = () => {
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    //משתנה שנפעיל עליו את הפונקציות של האקשנס
    //הדיספץ' ישלח את הפונקציה לאויר והרדוסר יתפוס אותו ויפעיל את הפונקציה המתאימה
    const dispatch = useDispatch()
    const id = useSelector(store => {
        return store.maxId
    })
    const send = () => {
        const user = {
            id: id + 1,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        dispatch(addUser(user))
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>sign up</button>
    </>
}D:\הנדסאים\react\react-project\src
Users.jsximport React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { PersonalArea } from "./PersonalArea";
import { setCurrentUser } from "./redux/Action";
export const Users = () => {
    const [show, setShow] = useState(false)
    const dispatch = useDispatch()
    //פונקציה שמאפשרת שליפה מהסטור
    //מקבלת פונקציה אנונימית ומחזירה את הנתונים המבוקשים
    const list = useSelector(store => {
        return store.users
    })
    const openUpdate = (user) => {
        setShow(true)
        dispatch(setCurrentUser(user))
    }
    const closeUpdate=()=>{
        setShow(false)
    }
    return <>
        <ul>
            {list.map((item, index) => (<li key={index}>{item.firstName} <button onClick={() => { openUpdate(item) }}>update</button></li>))}
        </ul>
        {show && <PersonalArea close={closeUpdate}></PersonalArea>}
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Provider } from "react-redux";
import store from "./redux/Store";
import { SignUp } from "./SignUp";
import { Users } from "./Users";
export const Main = () => {
    return <>
        {/* טעינת קומפוננטה מריאקט רידקס */}
        {/* הפרוביידר מקבל כפרופס את המחסן */}
        {/* כל קומפוננטה שתטען בתוך הפרוביידר תכיר את המחסן */}
        <Provider store={store}>
            <Users></Users>
            <SignUp></SignUp>
        </Provider>
    </>
}D:\הנדסאים\react\react-project\src
PersonalArea.jsximport React, { useEffect, useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { updateUser } from "./redux/UserAction";
export const PersonalArea = (props) => {
    const dispatch = useDispatch()
    var currentUser = useSelector(store => {
        return store.userReducer.currentUser
    })
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    const send = () => {
        constole.log(currentUser);
        const user = {
            id: currentUser.id,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        //כלל של אובייקט json
        //אם המפתח והערך בעלי אותו שם מספיק לכתוב רק פעם אחת
        // { user:user } = { user }
        dispatch(updateUser({ id: currentUser.id, user }))
        props.close()
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>save changes</button>
    </>
}D:\הנדסאים\react\react-project\src
SignUp.jsximport React, { useRef } from "react";
import { useDispatch, useSelector } from "react-redux";
import { addUser } from "./redux/UserAction";
export const SignUp = () => {
    const fnRef = useRef()
    const lnRef = useRef()
    const emailRef = useRef()
    const cellRef = useRef()
    const pwRef = useRef()
    //משתנה שנפעיל עליו את הפונקציות של האקשנס
    //הדיספץ' ישלח את הפונקציה לאויר והרדוסר יתפוס אותו ויפעיל את הפונקציה המתאימה
    const dispatch = useDispatch()
    const id = useSelector(store => {
        return store.userReducer.maxId
    })
    const send = () => {
        const user = {
            id: id + 1,
            firstName: fnRef.current.value,
            lastName: lnRef.current.value,
            eMail: emailRef.current.value,
            cell: cellRef.current.value,
            password: pwRef.current.value
        }
        //הפעלת האקשן באמצעות הדיספץ
        dispatch(addUser(user))
    }
    return <>
        <input placeholder={'input firstname'} ref={fnRef}></input>
        <input placeholder={'input lastname'} ref={lnRef}></input>
        <input placeholder={'input email'} ref={emailRef}></input>
        <input placeholder={'input cell'} ref={cellRef}></input>
        <input type={'password'} placeholder={'input password'} ref={pwRef}></input>
        <button onClick={send}>sign up</button>
    </>
}D:\הנדסאים\react\react-project\src
Users.jsximport React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { PersonalArea } from "./PersonalArea";
import { removeUser, setCurrentUser } from "./redux/UserAction";
export const Users = () => {
    const [show, setShow] = useState(false)
    const dispatch = useDispatch()
    //פונקציה שמאפשרת שליפה מהסטור
    //מקבלת פונקציה אנונימית ומחזירה את הנתונים המבוקשים
    const list = useSelector(store => {
        return store.userReducer.users
    })
    const openUpdate = (user) => {
        constole.log(user);
        setShow(true)
        dispatch(setCurrentUser(user))
    }
    const closeUpdate = () => {
        setShow(false)
    }
    const deleteUser=(index)=>{
        dispatch(removeUser(index))
    }
    return <>
        <ul>
            {list.map((item, index) =>
            (<li key={index}>{item.firstName}
                <button onClick={() => { openUpdate(item) }}>update</button>
                <button onClick={() => { deleteUser(index) }}>delete</button>
            </li>))}
        </ul>
        {show && <PersonalArea close={closeUpdate}></PersonalArea>}
    </>
}D:\הנדסאים\react\react-project\src
Form.jsximport React, { useState } from "react";
import { useDispatch, useSelector } from "react-redux";
import { addUser } from "../lesson7/redux/Action";
export const Form = () => {
    //משתנה שנפעיל עליו את הפונקציות של האקשנס
    //הדיספץ' ישלח את הפונקציה לאויר והרדוסר יתפוס אותו ויפעיל את הפונקציה המתאימה
    const dispatch = useDispatch()
    const id = useSelector(store => {
        return store.maxId
    })
    const [errors, setErrors] = useState({ firstname: '', lastname: '', email: '', cell: '', password: '' })
    const validFN = (e) => {
        const firstname = /^\w{5,15}$/
        if (e.target.value.length === 0) {
            setErrors({ ...errors, firstname: 'שדה חובה!' })
        }
        else if (!e.target.value.match(firstname)) {
            setErrors({ ...errors, firstname: 'שם חייב להכיל בין 5 ל 15 תווים' })
        }
        else setErrors({ ...errors, firstname: '' })
    }
    const validLN = (e) => {
        const lastname = /^\w{5,15}$/
        if (e.target.value.length === 0) {
            setErrors({ ...errors, lastname: 'שדה חובה!' })
        }
        else if (!e.target.value.match(lastname)) {
            setErrors({ ...errors, lastname: 'שם חייב להכיל בין 5 ל 15 תווים' })
        }
        else setErrors({ ...errors, lastname: '' })
    }
    const validEmail = (e) => {
        if (e.target.value.length === 0) {
            setErrors({ ...errors, email: 'שדה חובה!' })
        }
        else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e.target.value)) {
            setErrors({ ...errors, email: 'כתובת האימייל אינה חוקית!' })
        }
        else setErrors({ ...errors, email: '' })
    }
    const validCell = (e) => {
        const cell = /^[0]+\w{8,9}$/
        if (!e.target.value.match(cell)) {
            setErrors({ ...errors, cell: 'מספר טלפון אינו תקין!' })
        }
        else setErrors({ ...errors, cell: '' })
    }
    const validPW = (e) => {
        const pw = /^[A-Za-z]+\w{7,14}$/
        if (e.target.value.length === 0) {
            setErrors({ ...errors, password: 'שדה חובה!' })
        }
        else if (e.target.value.match(pw)) {
            setErrors({ ...errors, password: 'סיסמה חייבת להתחיל באות אנגלית ויכולה להכיל בין 7 ל 14 תווים' })
        }
        else setErrors({ ...errors, password: '' })
    }
    const send = (event) => {
        //שמחפש לעבור לדף אחר submit ביטול ברירת המחדל של
        event.preventDefault();
        constole.log(event);
        const user = {
            id: id + 1,
            firstName: event.target[0].value,
            lastName: event.target[1].value,
            eMail: event.target[2].value,
            cell: event.target[3].value,
            password: event.target[4].value
        }
        constole.log(user);
        // //הפעלת האקשן באמצעות הדיספץ
        dispatch(addUser(user))
    }
    return <>
        <form onSubmit={(e) => send(e)}>
            <label htmlFor={'firstname'}>first name:</label><br></br>
            <input id={'firstname'} onChange={(e) => validFN(e)}></input>
            {errors.firstname !== '' && <p>{errors.firstname}</p>}
            <br></br>
            <label htmlFor={'last name'}>last name:</label><br></br>
            <input id={'lastname'} onChange={(e) => validLN(e)}></input>
            {errors.lastname !== '' && <p>{errors.lastname}</p>}
            <br></br>
            <label htmlFor={'email'}>email:</label><br></br>
            <input id={'email'} type={'email'} onChange={(e) => validEmail(e)}></input>
            {errors.email !== '' && <p>{errors.email}</p>}
            <br></br>
            <label htmlFor={'cell'}>cell:</label><br></br>
            <input id={'cell'} onChange={(e) => validCell(e)}></input>
            {errors.cell !== '' && <p>{errors.cell}</p>}
            <br></br>
            <label htmlFor={'password'}>password:</label><br></br>
            <input id={'password'} type={'password'} onChange={(e) => validPW(e)}></input>
            {errors.password !== '' && <p>{errors.password}</p>}
            <br></br>
            <input type={'submit'} value={'sign up'}></input><br></br>
        </form>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { Provider } from "react-redux";
import { Form } from "./Form";
import store from "../lesson7/redux/Store";
import { Users } from "../lesson7/Users";
export const Main = () => {
    return <>
        {/* טעינת קומפוננטה מריאקט רידקס */}
        {/* הפרוביידר מקבל כפרופס את המחסן */}
        {/* כל קומפוננטה שתטען בתוך הפרוביידר תכיר את המחסן */}
        <Provider store={store}>  
            <Form></Form>
            <Users></Users>
        </Provider>
    </>
}D:\הנדסאים\react\react-project\src
AddCategorey.jsximport { useDispatch, useSelector } from "react-redux"
import { addCategorey } from "./redux/Action"
import {useState} from 'react'
export const AddCategorey=()=>{
    const categoreys=useSelector(x=>x.Categories)
    const [newCategorey, setCategorey] = useState("")
    const dispatch=useDispatch()
    const add=(event)=>{    
        event.preventDefault();
        dispatch(addCategorey(newCategorey))
    }
    return <>
        <div>
            {categoreys.map(x => <h1>{x.name}</h1>)}
                <form onSubmit={(e) => add(e)}>
                <input id={'name'} placeholder="Categoreys"onBlur={(e) => setCategorey({ ...newCategorey, name: e.target.value })}></input>
        <button id={'submit'}>send</button>
        </form>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
AddLevel.jsximport { useDispatch, useSelector } from "react-redux"
import { useState } from 'react'
import { addLevel } from "./redux/Action"
export const AddLevel = () => {
    const [newLevel, setLevel] = useState("")
    const levels = useSelector(x => x.Levels)
    const dispatch=useDispatch()
    const add=(event)=>{ 
        event.preventDefault();
        console.log(newLevel)
        dispatch(addLevel(newLevel))
    }
    return <>
        <div>
            {levels.map(x => <h1>{x.name}</h1>)}
                <form onSubmit={(e) => add(e)}>
                <input id={'name'} placeholder="level"onBlur={(e) => setLevel({ ...newLevel, name: e.target.value })}></input>
        <button id={'submit'}>send</button>
        </form>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
AddReply.jsximport { useState } from "react"
import { useSelector } from "react-redux"
import { useDispatch } from "react-redux"
import {addReplay} from "./redux/Action";
import { useNavigate } from "react-router-dom";
import { useParams } from 'react-router-dom'
export const AddReply = () => {
    let p = useParams()
    const comments=useSelector(x=>x.Replies)
    const nav = useNavigate()
    const[newComments,setNewComments]=useState("")
    const dispatch=useDispatch()
    debugger
    const send = (event) => {
        event.preventDefault();
        setNewComments({ ...newComments, name: p.name})
        setNewComments({ ...newComments, password:p.password })
        dispatch(addReplay(newComments))   
    }
return<>
<div>
<h1>{p.name}</h1>
<form onSubmit={(e) => send(e)}>
<textarea id={'reply'} placeholder="input reply" onBlur={(e) => setNewComments({ ...newComments, reply: e.target.value ,password:p.password,name: p.name})} ></textarea>
<button id={'submit'}>send</button>
    </form>
</div>
</>
}
D:\הנדסאים\react\react-project\src
AllRecipes.jsximport { useState } from 'react'
import { useSelector } from 'react-redux'
import { useNavigate, Outlet } from 'react-router-dom'
import "../css.css/StyleRecipe.css"
import { Recipe } from './Recipe'
export const AllRecipes = () => {
  const [valueType, setValueType] = useState("")
  const [valueLevel, setValueLevel] = useState("")
  const categories = useSelector(x => x.Categories)
  const levels = useSelector(x => x.Levels)
  const Recipes = useSelector(x => x.Recipes)
  const newRecipes = Recipes.filter(i => (i.type == valueType) && (i.level == valueLevel))
  if ((valueType == "כל המתכונים") && (valueLevel == "כל המתכונים"))
    console.log(newRecipes)
  return <>
    <div className='all'>
      {(((valueType == "") || (valueType == 'כל המתכונים')) && Recipes.map(i => <Recipe data={i}></Recipe>))}
      {(((valueType != "") && newRecipes.map(i => <Recipe data={i}></Recipe>)))}
    </div>
    {<select onBlur={(e) => { setValueType(e.target.value) }}>{categories.map(x => <option>{x.name}</option>)}</select>}
    {<select onBlur={(e) => { setValueLevel(e.target.value) }}>{levels.map(x => <option>{x.name}</option>)}</select>}
  </>
}D:\הנדסאים\react\react-project\src
Details.jsximport { useParams } from 'react-router-dom'
import { NavLink, Outlet } from "react-router-dom"
import "../css.css/StyleNav.css"
import { useSelector } from "react-redux"
export const Details = () => {
   let p = useParams()
   const CaurrentUser = useSelector(x => x.CaurrentUser)
   const ingredientsToRecipes = useSelector(x => x.IngredientsToRecipes)
   const maneger = useSelector(x => x.Maneger)
   const user = useSelector(x => x.Users)
   const thisIngredients = ingredientsToRecipes.filter(i => (i.nameRecipe == p.name))
   const nameSender = user.filter(x => (x.password == p.password))
   return <>
      {<div className={'nav'}>
         {(CaurrentUser.email != "")
            &&
            <NavLink to='AddReply' className={'link'} data={p.name}>AddReply</NavLink>}
         {(CaurrentUser.email != "")
            &&
            <NavLink to='Reply' className={'link'} data={p.name}>Reply</NavLink>}
      </div>}
      <br></br>
      {
         <div id='detiles'>
            <img src={`${process.env.PUBLIC_URL}/img/${p.picture}`} width={'200px'} height={'auto'}></img>
            <h1>{p.name}</h1>
            <h2>פרטים נוספים</h2>
            {<p>
               <h4>level: {p.level}</h4>
               <h4>time: {p.time}</h4>
               <h4>type: {p.type}</h4>
               <h4>sender: {nameSender[0].firstName}</h4>
               <h4>text: {p.text}</h4>
            </p>}
            <p>חומרים:
               {thisIngredients.map(x => <h1>{x.nameIngredient}</h1>)}</p>
         </div>
      }
      <Outlet></Outlet>
   </>
}D:\הנדסאים\react\react-project\src
HomePage.jsximport { useSelector } from "react-redux"
export const Home = () => {
    <br></br>
    const CaurrentUser=useSelector(x=>x.CaurrentUser)
    const Users=useSelector(x=>x.Users)
    const ingredientToRecipe=useSelector(x=>x.IngredientsToRecipes)
    return <>
    <br></br>
       <img src={`${process.env.PUBLIC_URL}/img/${'recipe.jpg'}`} width={'1520px'}height={'auto'}></img> 
    </>
}D:\הנדסאים\react\react-project\src
Ingredients.jsximport { useState } from "react"
import { useSelector } from "react-redux"
export const Ingredients=()=>{
    const [checked,setChecked]=useState()
    const check=(e)=>{
        setChecked(e.target.checked)
      }
    const ingredients=useSelector(x=>x.Ingredients)
    return<>
    <div>{ingredients.map(i=><p>{i.name}<input type="checkbox" onChange={e=>check(e)}></input></p>)}</div>
    </>
}D:\הנדסאים\react\react-project\src
Login.jsximport { Link, NavLink, useNavigate } from "react-router-dom"
import { useRef, useState } from "react"
import { SingUp } from "./SingUp"
import { useDispatch, useSelector } from "react-redux"
import { addCaurrentUser } from "./redux/Action"
import { Maneger } from "./Maneger"
export const Login = () => {
    const nav = useNavigate()
    const Users = useSelector(x => x.Users)
    let flag = false
    const [CaurrentUser, setCaurrentUser] = useState({})
    const manager=useSelector(x=>x.Maneger)
    const dispatch=useDispatch()
    const send = (event) => {
        event.preventDefault();
       (CaurrentUser.password==manager.password && CaurrentUser.email==manager.email)&&
       nav('/Maneger')
        Users.map(i => {
             (i.password == CaurrentUser.password && i.email == CaurrentUser.email) && (flag = true)&&
            dispatch(addCaurrentUser(i)) 
            })
             flag == true && nav('/Home') 
             flag == false && nav('/SingUp')
    }
    return <>
    <div>טופס כניסה</div>
    <h3>Login  </h3>
    <form onSubmit={(e) => send(e)}>
        <label htmlFor={'email'}>email:</label><br></br>
        <input id={'email'} placeholder="input email" onBlur={(e) => setCaurrentUser({ ...CaurrentUser, email: e.target.value })}></input>
        <br></br>
        <label htmlFor={'password'}>password:</label><br></br>
        <input id={'password'} placeholder="input password" onBlur={(e) => setCaurrentUser({ ...CaurrentUser, password: e.target.value })}></input>
        <button id={'submit'}>send</button>
        <h1>{CaurrentUser.email}</h1>
    </form>
</>
}D:\הנדסאים\react\react-project\src
Main.jsximport { BrowserRouter } from "react-router-dom"
import { Nav } from "./Nav"
import { Routing } from "./Routing"
import { Provider } from "react-redux"
import Store from './redux/Store'
export const Main = () => {
    return <>
    <Provider store={Store}>
    <BrowserRouter>
    <Nav></Nav>
    <Routing></Routing>
    </BrowserRouter>
    </Provider>
    </>
}D:\הנדסאים\react\react-project\src
Maneger.jsximport { NavLink, Outlet } from "react-router-dom"
export const Maneger = () => {
    return<>
    <div className={'nav'}>
     <NavLink to='AddLevel' className={'link'}>AddLevel</NavLink>
     <NavLink to='AddCategorey' className={'link'}>AddCategorey</NavLink>
     </div>
     <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
MyRecipePage.jsximport { useSelector } from "react-redux"
export const MyRecipePage=()=>{
const recipes=useSelector(x=>x.Recipes)
const CaurrentUser=useSelector(x=>x.CaurrentUser)
const MyRecipes=recipes.filter(i=>(i.password==CaurrentUser.password))
return<>
{MyRecipes.map(x=><p>{x.name}</p>)}
</>
}D:\הנדסאים\react\react-project\src
MyRecipes.jsximport { useSelector } from "react-redux"
export const MyRecipes=()=>{
    const recipes=useSelector(x=>x.Recipes)
    const CaurrentUser=useSelector(x=>x.CaurrentUser)
const MyRecipes=recipes.filter(i=>(CaurrentUser.password==recipes.password))
return<>
{
    <h1>fygy</h1>}
    {MyRecipes.map(x=><p>{x.name}</p>)}
</>
}D:\הנדסאים\react\react-project\src
Nav.jsximport { NavLink } from "react-router-dom"
 import "../css.css/StyleNav.css"
import { useSelector } from "react-redux"
export const Nav = () => {
    const CaurrentUser=useSelector(x=>x.CaurrentUser)
    const maneger=useSelector(x=>x.Maneger)
    debugger
    return <>
    <div className={'nav'}>
     <NavLink to='Home' className={'link'}>Home</NavLink>
     <NavLink to='Login' className={'link'}>Login</NavLink>
     <NavLink to='SingUp' className={'link'}>SingUp</NavLink>
     <NavLink to='AllRecipes' className={'link'}>AllRecipes</NavLink>
    {
    CaurrentUser.email==maneger.email &&
     <NavLink to='Maneger' className={'link'}>Maneger</NavLink>
    }
    {
    CaurrentUser.email!="" &&
     <NavLink to='PrivateAdmin' className={'link'}>{CaurrentUser.firstName}</NavLink>
    }
</div>
    </>
}D:\הנדסאים\react\react-project\src
PrivateAdmin.jsximport { NavLink ,Outlet} from "react-router-dom"
import "../css.css/StyleNav.css"
export const PrivateAdmin = () => {
    return <>
    <div className={'nav'}>
     <NavLink to='MyRecipePage' className={'link'}>MyRecipes</NavLink>
     <NavLink to='ToAddRecipe' className={'link'}>ToAddRecipe</NavLink>
     </div>
     <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
Recipe.jsximport "../css.css/StyleRecipe.css"
import { useNavigate } from "react-router-dom"
export const Recipe = (props) => {
    const p = props.data
    let nav = useNavigate()
    const show = (c) => {
        nav(`/Details/${c.name}/${c.level}/${c.time}/${c.type}/${c.picture}/${c.password}/${c.text}`)
    }
    return <>
        <div className="recipe">
            <p id={p.type}>
                <img src={`${process.env.PUBLIC_URL}/img/${p.picture}`} width={'200px'} height={'auto'}></img>
                <br></br>
                {p.name}
            </p>
            <button onClick={() => show(props.data)}>show details</button>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
Reply.jsximport { useSelector } from "react-redux/es/hooks/useSelector"
import { useParams } from 'react-router-dom'
export const Reply = () => {
    const replies=useSelector(x=>x.Replies)
    const user=useSelector(x=>x.Users)
    let p = useParams()
    debugger
    const a= replies.filter(i => (i.name == p.name))
    console.log(a)
    const b=user.filter(i=>(i.password==p.password))
return<>
     {a.map(x=><h1> comment: {x.reply},name:{x.password}</h1> )}
    {b.map(x=><p>{x.firstName}</p>)}  
</>
}
D:\הנדסאים\react\react-project\src
Routing.jsximport { Route, Routes } from 'react-router-dom'
// לשים לב שזה אות קטנה
 import { Home } from './HomePage' 
import { Login } from './Login' 
import { SingUp } from './SingUp'
import { AllRecipes } from './AllRecipes'
import {PrivateAdmin} from './PrivateAdmin'
import { ToAddRecipes } from './ToAddRecipe'
import { MyRecipePage } from './MyRecipePage'
import { Details } from './Details'
import { Reply } from './Reply'
import { AddReply } from './AddReply'
import { Ingredients } from './Ingredients'
import {  Appp } from './try'
import { Maneger } from './Maneger'
import{AddLevel} from './AddLevel'
import {AddCategorey} from './AddCategorey'
export const Routing = () => {
    return <>
    <Routes>
    <Route path={'Appp'} element={<Appp></Appp>}></Route>
        <Route path={'Home'} element={<Home></Home>}></Route> 
        <Route path={'Login'} element={<Login></Login>}></Route>
        <Route path={'SingUp'} element={<SingUp></SingUp>}></Route>
        <Route path={'AllRecipes'} element={<AllRecipes></AllRecipes>}></Route>
        <Route path={'PrivateAdmin'} element={<PrivateAdmin></PrivateAdmin>}>
           <Route path={'ToAddRecipe'} element={<ToAddRecipes></ToAddRecipes>}>
             <Route path={'Ingredients'} element={<Ingredients></Ingredients>}></Route> </Route> 
            <Route path={'MyRecipePage'} element={<MyRecipePage></MyRecipePage>}></Route>
        </Route>
        <Route path={'Maneger'} element={<Maneger></Maneger>}>
        <Route path={'AddLevel'} element={<AddLevel></AddLevel>}></Route>
        <Route path={'AddCategorey'} element={<AddCategorey></AddCategorey>}></Route>
        </Route>
        <Route path={'Details/:name/:level/:time/:type/:picture/:password/:text'} element={<Details></Details>}>
            <Route path={'Reply'} element={<Reply></Reply>}></Route>
            <Route path={'AddReply'} element={<AddReply></AddReply>}></Route>
         </Route>
    </Routes>
    </>
}D:\הנדסאים\react\react-project\src
SingUp.jsximport { useState } from "react"
import { addCaurrentUser, addUser } from "./redux/Action"
import {  useNavigate } from "react-router-dom"
import { useDispatch, useSelector } from "react-redux"
import swal from "sweetalert"
export const SingUp = () => {
    const [errors,setErrors]=useState({email:'', password:''})
const validEmail=(e)=>{
        if(e.target.value.length===0){
         setErrors({...errors, email:'שדה חובה!'})
        }
        else if(!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(e.target.value)){
        setErrors({...errors, email:'כתובת אימייל אינה חוקית'})
        }
        else setErrors({...errors, email:''})
    }
    const nav = useNavigate()
   const dispatch=useDispatch()
    const [currentUser,setCurrentUser]=useState("")  
    const Users = useSelector(x => x.Users)
    const send = (event) => {
        event.preventDefault();
        dispatch(addCaurrentUser(currentUser))
         dispatch(addUser(currentUser))
        nav('/Home')
        swal(`שלום ${currentUser.firstName}!`, "נרשמת בהצלחה למערכת")
   }         
    return <>
    <form onSubmit={(e) => send(e)}>
        <label htmlFor={'firstName'}>firstName:</label><br></br>
        <input id={'firstName'} placeholder="input firstName" onBlur={(e) => setCurrentUser({ ...currentUser, firstName: e.target.value })}></input>
        <br></br>
        <label htmlFor={'lastName'}>lastName:</label><br></br>
        <input id={'lastName'} placeholder="input lastName" onBlur={(e) => setCurrentUser({ ...currentUser, lastName: e.target.value })}></input>
        <br></br>
        <label htmlFor={'email'}>email:</label><br></br>
        <input id={'email'} placeholder="input email" onChange={(e) =>validEmail(e)}></input>
         {errors.email !='' && <p>{errors.email}</p>}
        <br></br>
        <label htmlFor={'password'}>password:</label><br></br>
        <input id={'password'} placeholder="input password" onBlur={(e) => setCurrentUser({ ...currentUser, password: e.target.value })}></input>
        <br></br>
        <button id={'submit'}>send</button>
    </form>
    </>
}
D:\הנדסאים\react\react-project\src
ToAddRecipe.jsximport { useState } from "react"
import { addIngrediantToRecipe, addRecipe } from "./redux/Action";
import { useDispatch, useSelector } from "react-redux";
import { Outlet, useNavigate } from "react-router-dom";
export const ToAddRecipes = () => {
  const categories = useSelector(x => x.Categories)
  const level = useSelector(x => x.Levels)
  const ingredients = useSelector(x => x.Ingredients)
  const nav = useNavigate()
  const CaurrentUser = useSelector(x => x.CaurrentUser)
  const dispatch = useDispatch()
  const [ingredientToRecipe, setIngredientToRecipe] = useState({
    nameRecipe: "",
    nameIngredient: ""
  })
  const [choseIngredient, setChoseIngredient] = useState({
    ingredient: [],
    response: [],
  });
  const send = (event) => {
    event.preventDefault();
    const u = {
      name: event.target[0].value,
      level: event.target[1].value,
      time: event.target[2].value,
      type: event.target[3].value,
      picture: event.target[4].value,
      password: CaurrentUser.password,
      text: event.target[5].value,
    }
    dispatch(addRecipe(u))
    choseIngredient.ingredient.map(x => input(x, u))
    nav('/AllRecipes')
  }
  const input = (x, u) => {
    const newI = {
      nameRecipe: u.name,
      nameIngredient: x
    }
    dispatch(addIngrediantToRecipe(newI))
  }
  const handleChange = (e) => {
    const { value, checked } = e.target;
    const { ingredient } = choseIngredient;
    if (checked) {
      setChoseIngredient({
        ingredient: [...ingredient, value],
        response: [...ingredient, value]
      });
    }
    else {
      setChoseIngredient({
        ingredient: ingredient.filter((e) => e !== value),
        response: ingredient.filter((e) => e !== value)
      });
    }
  }
  return <>
    {
      <form onSubmit={(e) => send(e)}>
        <label htmlFor={'name'}>שם מתכון:</label><br></br>
        <input id={'name'} placeholder="input name" ></input>
        <br></br>
        <label htmlFor={'level'}>level:</label><br></br>
        {<select >{level.map(x => <option>{x.name}</option>)}</select>}
        <br></br>
        <label htmlFor={'time'}>time:</label><br></br>
        <input id={'time'} placeholder="input time" ></input>
        <br></br>
        <label htmlFor={'type'}>type:</label><br></br>
        <select >{categories.map(x => <option>{x.name}</option>)}</select>
        <br></br>
        <label htmlFor={'picture'}>picture:</label><br></br>
        <input id={'picture'} placeholder="input picture" ></input>
        <br></br>
        <label htmlFor={'text'}>text:</label><br></br>
        <input id={'text'} placeholder="input text" ></input>
        <br></br>
        {ingredients.map(x => <div><input
          className="form-check-input"
          type="checkbox"
          name="ingredient"
          value={x.name}
          id="flexCheckDefault"
          onChange={handleChange} />
          <label>{x.name}</label>
        </div>)}
        <input placeholder="input new Ingredient" onBlur={(e) => {
          setChoseIngredient({
            ingredient: [...choseIngredient.ingredient, e.target.value],
            response: [...choseIngredient.ingredient, e.target.value]
          });
        }
        }></input>
        <textarea
          className="form-control text"
          name="response"
          value={choseIngredient.response}
          placeholder="The checkbox values will be displayed here "
          id="floatingTextarea2"
          style={{ height: "150px" }}
          onChange={handleChange}
        ></textarea>
        <button id={'submit'}>send</button>
      </form>}
    <Outlet></Outlet>
  </>
}D:\הנדסאים\react\react-project\src
try.jsx  export const Appp=()=>{
    return<>
    </>
}D:\הנדסאים\react\react-project\src
stor.jsx//immer - ספריה שמאפשרת עריכת משתנים סופיים - constant variables
import { produce } from 'immer';
import { createStore } from 'redux';
//State - משתנה גלובלי שיהיה מוכר לכל הקומפוננטות
//initialState = סטייט מאותחל
//שם מקובל - לא חובה
const initialState = {
    products: [
        {kod:11, name: 'cher', price: 100 },
        {kod:22, name: 'table', price: 700},
        {kod:33, name: 'sopa', price: 1080},
    ],
    currentProducts: { name: 'Annonymous' },
}
const reducer = produce((state, action) => {
    switch (action.type) {
        case 'SET_PRODUCT':
            state.products[action.payload.index] = action.payload.user
            break;
        case 'ADD_PRODUCT':
            state.products = [...state.products, action.payload]
            break;
        default:
            break;
    }
}, initialState)
//יצירת המחסן - מקבל את הרדיוסר
const store = createStore(reducer)
window.store = store;
export default store;D:\הנדסאים\react\react-project\src
SelectCity.jsximport React from "react";
export const SelectCity = (props) => {
    const { cities, setCity } = props
    return <>
        <select onChange={setCity}>
            <option disabled selected>select city</option>
            {cities.map((item, index) => (<option key={index} value={item}>{item}</option>))}
        </select>
    </>
}D:\הנדסאים\react\react-project\src
SelectCountry.jsximport React from "react";
export const SelectCountry = (props) => {
    const { countries, setCountry } = props
    return <>
        <select onChange={setCountry}>
            <option disabled selected>select country</option>
            {countries.map((item, index) => (<option key={index} value={item}>{item}</option>))}
        </select>
    </>
}D:\הנדסאים\react\react-project\src
SelectMain.jsximport React from "react";
import { useState } from "react";
import { SelectCity } from "./SelectCity";
import { SelectCountry } from "./SelectCountry";
export const SelectMain = () => {
    const [selectedCountry, setSelectedCountry] = useState(null)
    const [selectedCity, setSelectedCity] = useState(null)
    const [isCity, setIsCity] = useState(false)
    const countriesAndCities = {
        Israel: ['Jerusalem', 'Bet Shemesh', 'Tzfat', 'Beitar', 'Ashdod', 'Haifa'],
        England: ['London', 'Gateshead', 'Mantchester'],
        Franch: ['Paris', 'Bordo'],
        Yemen: ['Tsana', 'Sinwan', 'Aden']
    }
    const countries = Object.keys(countriesAndCities)
    const cities = countriesAndCities[selectedCountry]
    function changeCountry(e) {
        setSelectedCountry(selectedCountry => e.target.value)
        setSelectedCity(null)
        setIsCity(true)
    }
    function changeCity(e) {
        setSelectedCity(e.target.value)
        setIsCity(false)
    }
    return <>
        {selectedCountry && <h3>Your Selection - Country: {selectedCountry}</h3>}
        {selectedCity && <h3>City :{selectedCity}</h3>}
        {/* <select onChange={changeCountry}>
            <option disabled selected>select country</option>
            {countries.map((item, index) => (<option key={index} value={item}>{item}</option>))}
        </select> */}
        {!isCity && <SelectCountry countries={countries} setCountry={changeCountry} ></SelectCountry>}
        {selectedCountry && isCity && <SelectCity cities={cities} setCity={changeCity}></SelectCity>}
        {/* <br></br>
        {selectedCountry &&
            <select onChange={changeCity}>
                <option disabled selected>select city</option>
                {cities.map((item, index) => (<option key={index} value={item}>{item}</option>))}
            </select>
        } */}
    </>
}D:\הנדסאים\react\react-project\src
Details.jsximport React from "react";
export const Details = (props) => {
    const { name, pw, list } = props
    return <>
        <h2>Hello {name}</h2>
        <h3>Your password is {pw}</h3>
        <h3>Your subjects are: </h3>
        {list.map(item => <label>{item},</label>)}
    </>
}D:\הנדסאים\react\react-project\src
Login.jsximport React, { useRef } from "react";
export default function Login(props) {
    const { name, password, page } = props
    const nameRef = useRef()
    const passwordRef = useRef()
    const send = () => {
        constole.log(nameRef);
        constole.log(passwordRef);
        //משתנה מסוג רף מכיל את הפקד שלו
        //current - הגישה לפקד תתבצע באמעצות 
        //value - הגישה לערך של הפקד
        name(nameRef.current.value)
        password(passwordRef.current.value)
        page(2)
    }
    // function send(){
    // }
    return <>
        {/* {nameRef && nameRef.current && nameRef.current.value && <h6> { nameRef.current.value }</h6>}
        {passwordRef && passwordRef.current && passwordRef.current.value && <h6>{passwordRef.current.value}</h6>} */}
        <input placeholder="input name" ref={nameRef}></input><br></br><br></br>
        <input type="password" placeholder="input password" ref={passwordRef}></input><br></br><br></br>
        <button onClick={send}>OK</button>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React, { useState } from "react";
import { Details } from "./Details";
import Login from "./Login";
import { Select } from "./Select";
export const Main = () => {
    const [name, setName] = useState()
    const [password, setPassword] = useState()
    const [subjects, setSubjects] = useState([])
    const [page, setPage] = useState(1)
    const list = ['Math', 'Java', 'C', 'C#', 'Angular', 'React', 'SQL', 'Python', 'Node.js', 'Assembler']
    const prev = '<<'
    const next = '>>'
    //העדפנו לשלוח את הפונקציה של ההוספה שיצרנו בעצמנו
    //כיון שאם היינו שולחות אם הפונקציה של סטייט
    //היינו צריכות לשלוח גם את הליסט בעצמו
    //כיון שמדובר בסטייט מסוג מערך שהעדכון שלו מצריך שפיכה של המערך הישן
    const addSubject = (newSubject) => {
        //פונקציית סט למערך יוצרת מערך חדש ושופכת לתוכו באמצעות שלש נקודות את כל האובייקטים שהיו במערך הישן ואח"כ תוסיף את האיבר החדש
        setSubjects([...subjects, newSubject])
        // constole.log(subjects);
    }
    return <>
        {page == 1 && <Login name={setName} password={setPassword} page={setPage}></Login>}
        {page == 2 && <Select list={list} add={addSubject} page={setPage}></Select>}
        {page == 3 && <Details name={name} pw={password} list={subjects}></Details>}<br></br>
        <button disabled={page <= 1} onClick={() => setPage(page => page - 1)}>{prev}</button><br></br>
        <button disabled={page >= 3} onClick={() => setPage(page => page + 1)}>{next}</button>
    </>
}D:\הנדסאים\react\react-project\src
Select.jsximport React from "react";
export const Select = (props) => {
    const { list, add, page } = props
    return <>
        {list.map((item, index) => (<>
            <Subject subject={item} add={add} key={index}></Subject>
            {/* <input type="checkbox" onChange={() => add(subject)}></input>
            <label>{subject}</label> */}
            <br></br>
        </>)
        )
        }
        <button onClick={() => page(3)}>send</button>
    </>
}
const Subject = (props) => {
    const { subject, add } = props
    return <>
        <input type="checkbox" onChange={() => add(subject)}></input>
        <label>{subject}</label>
    </>
}D:\הנדסאים\react\react-project\src
BlessCard.jsximport React from "react";
import './style.css'
export default function BlessCard(props) {
    return <>
        <div className={`bless ${props.gender}`}>
            <h1>Happy Purim!</h1>
            <img src={props.img}></img>
            <h2>LOVE {props.name}</h2>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
Console.jsximport React from "react"
import './style.css'
const Error = (props) => {
    return <>
        <div className={`err msg`}>{props.error}</div>
    </>
}
const Warning = (props) => {
    return <>
        <div className={`warn msg`}>{props.warning}</div>
    </>
}
const Info = (props) => {
    return <>
        <div className={`info msg`}>{props.info}</div>
    </>
}
export const constole = () => {
    return <>
        <Error error={'Js: connot assignment to a constatn variable'}></Error>
        <Warning warning={'Each child shuold has a unique key'}></Warning>
        <Info info={'Good Evening!'}></Info>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { constole } from "./constole";
import { DynamicStyle, InLineStyle } from "./StyleComp";
import Naama from '../assets/IMG_8098.jpg'
import YS from '../assets/TR2_8972.JPG'
import SHULAMIT from '../assets/TR2_8913.JPG'
import SHMUEL from '../assets/TR2_8960.JPG'
import BlessCard from "./BlessCard";
export const Main = () => {
    return <>
        {/* <constole></constole> */}
        {/* <DynamicStyle num={15}></DynamicStyle> */}
        {/* <DynamicStyle num={8}></DynamicStyle> */}
        {/* <InLineStyle color={'red'} bgColor={'black'} num={10}></InLineStyle> */}
        <BlessCard name={"Naama"} gender={'female'} img={Naama}></BlessCard>
        <BlessCard name={"Yosef Shalom"} gender={'male'} img={YS}></BlessCard>
        <BlessCard name={"Shulamit"} gender={'female'} img={SHULAMIT}></BlessCard>
        <BlessCard name={"Shmuel"} gender={'male'} img={SHMUEL}></BlessCard>
    </>
}D:\הנדסאים\react\react-project\src
StyleComp.jsximport React from "react";
export const DynamicStyle = (props) => {
    return <>
        <p className={props.num > 10 ? `big` : `small`}>{props.num}</p>
    </>
}
export const InLineStyle = (props) => {
    const style = {
        color: props.color,
        backgroundColor: props.bgColor
    }
    return <>
        <p style={style}>{props.num}</p>
        <p style={{ color: props.color, backgroundColor: props.bgColor }}>{props.num}</p>
    </>
}D:\הנדסאים\react\react-project\src
Contact.jsximport React, { useRef } from "react";
import { Outlet, useNavigate } from "react-router";
import { NavLink } from "react-router-dom";
export const Contact = () => {
    // const navigate = useNavigate()
    // const login = () => {
    //     navigate('login')
    // }
    // const register = () => {
    //     navigate('register')
    // }
    return <>
        {/* <button onClick={login}>login</button>
        <button onClick={register}>register</button> */}
        <NavLink to='login' className={'link'}>Login</NavLink>
        <NavLink to='register' className={'link'}>Register</NavLink>
        {/* הוספת הצהרה על אפשרות טעינת ילדים בקומפוננטה -  */}
        {/* טעינת ילד - אינה מחליפה את הקומפוננטה אלא טוענת בנוסף  */}
        <Outlet></Outlet>
    </>
}D:\הנדסאים\react\react-project\src
details.jsximport React from "react";
import { useParams } from "react-router";
export const Details = () => {
    //שליפת המשתנים שקבלנו כפרמטר
    const name = useParams().name
    return <>
        {/* הצגת שם המשתמש */}
        <h1>Hello {name}!</h1>
    </>
}D:\הנדסאים\react\react-project\src
login.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Login = () => {
    const nameRef = useRef()
    const pwRef = useRef()
    const navigate = useNavigate()
    const login = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        //הפונקציה שולפת את פרטי המשתמש מה loocalstorage
        //ובודקת האם הנתונים שהוכנסו זהים
        const user = localStorage.getItem('username')
        const pw = localStorage.getItem('password')
        if (nameRef.current.value === user && pwRef.current.value === pw) {
            //אם כן נבצע ניתוב ונשלח את השם כפרמטר
            navigate(`/details/${nameRef.current.value}`)
        }
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={login}>login</button>
    </>
}D:\הנדסאים\react\react-project\src
Main.jsximport React from "react";
import { BrowserRouter } from "react-router-dom";
import { Nav } from "./Nav";
import { Routing } from "./Routing";
export const Main = () => {
    return <>
        {/* קומפוננטה שמנהלת את כל הניתובים */}
        <BrowserRouter>
            {/* nav טוענת את ה */}
            <Nav></Nav>
            {/* טוענת את כל הצהרות הניתובים */}
            <Routing></Routing>
        </BrowserRouter>
        {/* <BrowserRouter>
            <Nav></Nav>
            <Routes>
                <Route path='login' element={<Login />}></Route>
                <Route path='tick' element={<Tick />}></Route>
            </Routes>
        </BrowserRouter> */}
    </>
}D:\הנדסאים\react\react-project\src
Nav.jsximport React from "react";
import { Link, NavLink } from "react-router-dom";
import './style.css'
export const Nav = () => {
    return <>
        <div className={'nav'}>
            {/* a- נגשת לשרת עבור שליפה של כל מחדש */}
            {/* <a></a> */}
            {/* קומפוננטה של ריאקט - link */}
            {/* link - טוען את היישום מקומית וניגש לשם לשלוף את הקומפוננטה הרצויה */}
            {/* <Link to='login' className={'link'}>Login</Link>
            <Link to='tick' className={'link'}>Tick</Link> */}
            {/* NavLink - active מזהה את הניתוב העכשוי ונותן לו את העיצוב של*/}
            {/* <NavLink to='login' className={'link'}>Login</NavLink>
            <NavLink to='register' className={'link'}>Register</NavLink> */}
            <NavLink to='contact' className={'link'}>Contact</NavLink>
        </div>
    </>
}D:\הנדסאים\react\react-project\src
register.jsximport React, { useRef } from "react";
import { useNavigate } from "react-router";
export const Register = () => {
    // שימוש במשתנה מצביע ע"מ שנוכל לשלוף נתונים מתוך הפקד
    const nameRef = useRef()
    const pwRef = useRef()
    // הגדרת משתנה מסוג navigate
    const navigate = useNavigate()
    //פונקציה ששומרת את נתוני המשתמש ב localstorage
    const register = () => {
        alert(nameRef.current.value + " " + pwRef.current.value)
        localStorage.setItem('username', nameRef.current.value)
        localStorage.setItem('password', pwRef.current.value)
        //אם כן ננתב מתוך הפונקציה ונשלח כפרמטר את שם המשתמש
        navigate(`/details/${nameRef.current.value}`)
        // navigate('/details/'+nameRef.current.value)
    }
    return <>
        <input placeholder={'input username'} ref={nameRef}></input>
        <input placeholder={'input password'} ref={pwRef}></input>
        <button onClick={register}>register</button>
    </>
}D:\הנדסאים\react\react-project\src
Routing.jsximport React from "react";
import { Route, Routes } from "react-router";
import { Login } from "./login";
import { Register } from "./register";
import { Details } from "./details";
import { Contact } from "./Contact";
import { PageNotFound } from "../../lesson6/PageNotFound";
import { BrowserRouter } from "react-router-dom";
export const Routing = () => {
    return <>
        {/* הצהרה על הניתובים */}
        <Routes>
            {/* עבור ניתוב ספציפי איזו קומפוננטה תטען */}
            <Route path='/' element={<Contact></Contact>}></Route>
            <Route path='contact' element={<Contact></Contact>}>
                <Route path='login' element={<Login></Login>}></Route>
                <Route path='register' element={<Register></Register>}></Route>
                <Route path='details/:name' element={<Details></Details>}></Route>
            </Route>
            <Route element={<PageNotFound></PageNotFound>}></Route>
        </Routes>
    </>
}D:\הנדסאים\react\react-project\src
Action.jsxexport const addUser = (user) => {
    return { type: 'ADD_USER', payload: user }
}
export const addRecipe = (recipe) => {
    return { type: 'ADD_RECIPE', payload: recipe }
}
export const addCaurrentUser = (user) => {
    return { type: 'ADD_CURRENT_USER', payload: user }
}
export const addIngrediantToRecipe= (ingredient) => {
    return { type: 'ADD_INGREDIANT_TO_RECIPE', payload: ingredient }}
export const addLevel = (level) => {
        return { type: 'ADD_LEVEL', payload: level }
}
export const addCategorey = (level) => {
    return { type: 'ADD_CATEGOREY', payload: level }
}
export const addReplay = (replay) => {
    return { type: 'ADD_REPLAY', payload: replay }
}D:\הנדסאים\react\react-project\src
Store.jsx//immer - ספריה שמאפשרת עריכת משתנים סופיים - constant variables
import { produce } from 'immer';
import { createStore } from 'redux';
//State - משתנה גלובלי שיהיה מוכר לכל הקומפוננטות
//initialState = סטייט מאותחל
//שם מקובל - לא חובה
const initialState = {
    Users: [
        // שינויים:
        //name=lastName && firstName
        //,phon:1234,address:"asxdcf" =מחקנו 
        { firstName: 'anonimy1', lastName: 'dddd', email: 'a123@gmail.com', password: '1' },
        { firstName: 'maneger', lastName: '', email: '111@gmail.com', password: '2' },
        { firstName: 'anonimy1', lastName: 'dddd', email: 'a123@gmail.com', password: '1' },
        { firstName: 'bbb', lastName: '', email: '111@gmail.com', password: '3' },
        { firstName: 'anonimy1', lastName: 'dddd', email: 'a123@gmail.com', password: '1' },
        { firstName: 'aaa', lastName: '', email: '111@gmail.com', password: '5' }
    ],
    // Recipes: [
    //     // { name: 'fish', instracshion: 'ffffff', level:"", time: 30, type: "parwe", picture:'1.jpg', password: '1357', text: 'tr' },
    //     { name: 'מאפינס',  level:"קל", time: 40, type: "parwe", picture:'1.jpg', password: '1', text: 'בתאבון'},
    // Recipes: [
    //     { name: 'מאפינס',level:"קל", time: 40, type: "parwe", picture: '1.jpg', password:1357, text: 'iiy'},
    //     { name: 'iceCream',level: "קשה", time: 20, type: "milky", picture: '1.jpg', password: 1357, text: 'tr' },
    //     { name: 'iceCqweream', level: "קל", time: 20, type: "milky", picture: '1.jpg', password: 57, text: 'tr' },
    //     { name: 'iceCqweream',  level: "קל", time: 20, type: "milky", picture: '1.jpg', password: 133, text: 'tr' }
    // ],
    Recipes: [
        // { name: 'fish', instracshion: 'ffffff', level:"", time: 30, type: "parwe", picture:'1.jpg', password: '1357', text: 'tr' },
        { name: 'מאפינס',  level:"קל", time: 40, type: "parwe", picture:'1.jpg', password: '1', text: 'בתאבון'},
        { name: 'פשטידה',  level:"בנוני", time: 40, type: "parwe", picture:'2.jpg', password: '1', text: 'בתאבון'},
        { name: 'מרק כתום',  level:"קשה", time: 40, type: "parwe", picture:'3.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שוקולד',  level:"קל", time: 40, type: "parwe", picture:'4.jpg', password: '3', text: 'בתאבון'},
        { name: 'פחזניות',  level:"קשה", time: 40, type: "parwe", picture:'5.jpg', password: '2', text: 'בתאבון'},    
        { name: 'מרק בצל',  level:"בנוני", time: 40, type: "parwe", picture:'6.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שוקולד בחושה',  level:"בנוני", time: 40, type: "parwe", picture:'7.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת וניל אישית',  level:"קל", time: 40, type: "parwe", picture:'8.jpg', password: '2', text: 'בתאבון'},
        { name: 'רולדת שוקולד ואגוזים',  level:"בנוני", time: 40, type: "parwe", picture:'9.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגיות שוקולד ציפס',  level:"בנוני", time: 40, type: "parwe", picture:'10.jpg', password: '1', text: 'בתאבון'},
        { name: 'קינוח משמש',  level:"קשה", time: 40, type: "parwe", picture:'11.jpg', password: '1', text: 'בתאבון'},
        { name: 'מאפינס וניל',  level:"קל", time: 40, type: "parwe", picture:'12.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגת כדורגל',  level:"קשה", time: 40, type: "parwe", picture:'13.jpg', password: '1', text: 'בתאבון'},
        { name: 'קרמשניט',  level:"בנוני", time: 40, type: "parwe", picture:'14.jpg', password: '1', text: 'בתאבון'},
        { name: 'וופל בלגי',  level:"בנוני", time: 40, type: "parwe", picture:'15.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגת שמרים',  level:"בנוני", time: 40, type: "parwe", picture:'16.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגיות שוקולד ציפס הפוכות',  level:"בנוני", time: 40, type: "parwe", picture:'17.jpg', password: '1', text: 'בתאבון'},
        { name: 'פאי תותים אישי',  level:"קשה", time: 40, type: "parwe", picture:'18.jpg', password: '1', text: 'בתאבון'},
        { name: 'בראוניז עם קצפת',  level:"בנוני", time: 40, type: "parwe", picture:'19.jpg', password: '1', text: 'בתאבון'},
        { name: 'עוגת תפוחים',  level:"בנוני", time: 40, type: "parwe", picture:'20.jpg', password: '2', text: 'בתאבון'},
        { name: 'טורט וניל',  level:"קל", time: 40, type: "parwe", picture:'21.jpg', password: '2', text: 'בתאבון'},
        { name: 'רוגלעך',  level:"בנוני", time: 40, type: "parwe", picture:'22.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שמרים גבינה',  level:"קשה", time: 40, type: "milky", picture:'23.jpg', password: '2', text: 'בתאבון'},
        { name: 'כדורי חלומי',  level:"קל", time: 40, type: "milky", picture:'24.jpg', password: '2', text: 'בתאבון'},
        { name: 'מרק שום',  level:"בנוני", time: 40, type: "milky", picture:'25.jpg', password: '2', text: 'בתאבון'},
        { name: 'גלי תות וקצפת',  level:"קל", time: 40, type: "milky", picture:'26.jpg', password: '2', text: 'בתאבון'},
        { name: 'עוגת שוקולד גבינה',  level:"בנוני", time: 40, type: "milky", picture:'27.jpg', password: '2', text: 'בתאבון'},
        { name: 'גלידת ריבת חלב',  level:"קל", time: 40, type: "milky", picture:'28.jpg', password: '2', text: 'בתאבון'},
        { name: 'קינוח שכבות קצפת',  level:"קשה", time: 40, type: "milky", picture:'29.jpg', password: '2', text: 'בתאבון'},
        { name: 'פנקייקס',  level:"בנוני", time: 40, type: "milky", picture:'30.jpg', password: '3', text: 'בתאבון'},
        { name: 'גלידת מילקי',  level:"קל", time: 40, type: "milky", picture:'31.jpg', password: '3', text: 'בתאבון'},
        { name: 'גלידת בננה',  level:"קל", time: 40, type: "milky", picture:'32.jpg', password: '3', text: 'בתאבון'},
        { name: 'קינוח אוכמניות',  level:"קשה", time: 40, type: "milky", picture:'33.jpg', password: '3', text: 'בתאבון'},
        { name: 'פנקייקס ממולאים בריבת חלב',  level:"בנוני", time: 40, type: "milky", picture:'34.jpg', password: '3', text: 'בתאבון'},
        { name: 'קנאפה אישית',  level:"קל", time: 40, type: "milky", picture:'35.jpg', password: '5', text: 'בתאבון'},
        { name: 'גלידת שוקולד',  level:"בנוני", time: 40, type: "milky", picture:'36.jpg', password: '3', text: 'בתאבון'},
        { name: 'קנאפה',  level:"קל", time: 40, type: "milky", picture:'37.jpg', password: '3', text: 'בתאבון'},
        { name: 'טרטל חלווה פקאן',  level:"קשה", time: 40, type: "milky", picture:'38.jpg', password: '3', text: 'בתאבון'},
        { name: 'קינוח ריבת חלב',  level:"בנוני", time: 40, type: "meats", picture:'39.jpg', password: '3', text: 'בתאבון'},
        { name: 'גלידת פקאן',  level:"בנוני", time: 40, type: "milky", picture:'40.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוגת ביסקוטים',  level:"קשה", time: 40, type: "milky", picture:'41.jpg', password: '4', text: 'בתאבון'},
        { name: 'גלידת אוראו',  level:"קל", time: 40, type: "milky", picture:'42.jpg', password: '4', text: 'בתאבון'},
        { name: 'מילקשייק תותים',  level:"קל", time: 40, type: "milky", picture:'43.jpg', password: '4', text: 'בתאבון'},
        { name: 'סלט סטייק',  level:"קשה", time: 40, type: "milky", picture:'44.jpg', password: '2', text: 'בתאבון'},
        { name: 'כבד',  level:"בנוני", time: 40, type: "meats", picture:'45.jpg', password: '5', text: 'בתאבון'},
        { name: 'קציצות בשר',  level:"בנוני", time: 40, type: "meats", picture:'46.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוף עם ירקות',  level:"בנוני", time: 40, type: "meats", picture:'47.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוף באננס',  level:"קשה", time: 40, type: "meats", picture:'48.jpg', password: '4', text: 'בתאבון'},
        { name: 'שיפודים',  level:"קל", time: 40, type: "meats", picture:'49.jpg', password: '4', text: 'בתאבון'},
        { name: 'עוף ותפוחי אדמה',  level:"קל", time: 40, type: "meats", picture:'50.jpg', password: '5', text: 'בתאבון'},
        { name: 'סטייק על האש',  level:"בנוני", time: 40, type: "meats", picture:'51.jpg', password: '5', text: 'בתאבון'},
        { name: 'עוף בתפוחי אדמה בטטה',  level:"בנוני", time: 40, type: "meats", picture:'52.jpg', password: '5', text: 'בתאבון'},
        { name: 'כבד עם תפודים',  level:"קשה", time: 40, type: "meats", picture:'53.jpg', password: '5', text: 'בתאבון'},
        { name: 'כנפיים בסילאן ודבש',  level:"בנוני", time: 40, type: "meats", picture:'54.jpg', password: '4', text: 'בתאבון'},
        { name: 'מוקפץ אורז',  level:"קשה", time: 40, type: "meats", picture:'55.jpg', password: '5', text: 'בתאבון'},
    ],
    Replies: [
        { idReply: '1w2', name: 'ffffff', reply: 'good' },
        { idReply: '1we2', name: 'fish', reply: 'Not tasty' },
    ],
    Levels:[{name:"כל הרמות"},{name:"קל"},{name:"בנוני"},{name:"קשה"}],
    Categories:[{name:"כל הקטגוריות"},{name:"parwe"},{name:"milky"},{name:"meats"}],
    CaurrentUser: { firstName: '', lastName: '', email: '', password: '' },
    Maneger:{email:'111@gmail.com',password:'111'},
    IngredientsToRecipes: [{ nameRecipe:'' , nameIngredient:''},],
    Ingredients: [
        { name:'sugar' },
        { name:'sult' },
        { name:'egg' },
        { name:'cocoa' },
        { name:'coffee' }
    ]
}
//reducer - לא מילה שמורה!
//produce - פונקציה מובנית
//מזהה את הפעולות שנשלחות לאויר ומפעילה אותן בפועל על הסטייט
//מקבלת שני ארגומנטים
//1. callback פונקציית 
//2. סטייט שעליו נפעיל את הפעולות
//הפונקציה הפנימית מקבלת שני ארגומנטים
//1. state - הסטייט שהתקבל בפונקציה החיצונית
//2. action - פעולה כלשהיא
//הפונקציה הפנימית תבדוק איזה פעולה נשלחה ותפעיל אותה על הסטייט
const reducer = produce((state, action) => {
    switch (action.type) {
        case 'ADD_USER': {
            return { ...state, maxId: state.maxId + 1, Users: [...state.Users, action.payload] }
        }
            break;
         case 'ADD_LEVEL': {
            return { ...state, maxId: state.maxId + 1, Levels: [...state.Levels, action.payload] }
        }
        case 'ADD_CATEGOREY': {
            return { ...state, maxId: state.maxId + 1, Categories: [...state.Categories, action.payload] }
        }
        case 'ADD_REPLAY': {
            return { ...state, maxId: state.maxId + 1, Replies: [...state.Replies, action.payload] }
        }
            break;
        case 'ADD_CURRENT_USER': {
            state.CaurrentUser = action.payload
        }
            break;
        case 'ADD_RECIPE': {
            return { ...state, maxId: state.maxId + 1, Recipes: [...state.Recipes, action.payload] }
        }
        case 'ADD_INGREDIANT_TO_RECIPE': {
            return { ...state, maxId: state.maxId + 1, IngredientsToRecipes: [...state.IngredientsToRecipes, action.payload] }
        }
        // case 'ADD_LEVEL':{
        //     return {...state, maxId:state.maxId +1, Levels:[...state.Levels,action.payload]}
        // } 
        //     break;
        default:
            break;
    }
}, initialState)
//יצירה של הסטייט הסופי כמחסן
const store = createStore(reducer)
window.store = store;
export default store;